<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[tim tregubov]]></title>
  <link href="http://timofei7.github.com/atom.xml" rel="self"/>
  <link href="http://timofei7.github.com/"/>
  <updated>2013-03-27T18:37:17-04:00</updated>
  <id>http://timofei7.github.com/</id>
  <author>
    <name><![CDATA[timofei7]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[chessInvaders update]]></title>
    <link href="http://timofei7.github.com/blog/2013/03/20/chessinvaders-update/"/>
    <updated>2013-03-20T05:18:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2013/03/20/chessinvaders-update</id>
    <content type="html"><![CDATA[<p>It has been a month since <a href="https://itunes.apple.com/app/chess-invaders/id575380345">ChessInvaders</a> was published in the App Store!  It has &#8220;sold&#8221; (for free) more than 6k copies, and has been engaged with (played through at least one level) almost 15k times.  The download rate has slowed to about 10 a day, but about double that are playing every day!  I&#8217;m pretty happy with that given that it&#8217;s a pretty hard and definitely beta quality game experience.</p>

<p>There have even been some reviews!</p>

<p><span class='pullquote-right' data-pullquote='vibrant colored retro-style 3-D graphics'></p>

<blockquote><p>In this unique tower defense game, the battlefield is a Chess board and the warriors Chess pieces. You will control the courageous knight and fend off the waves of evil pawns. The game features three unlockable worlds, vibrant colored retro-style 3-D graphics, an electrifying soundtrack, and Game Center integration.</p><footer><strong>appadvice.com</strong> <cite><a href='http://appadvice.com/appnn/2013/02/todays-best-apps-word-dig-chess-invaders-and-sequences'>appadvice.com/appnn/2013/02/&hellip;</a></cite></footer></blockquote>


<p></span></p>

<blockquote><p>&#8220;Some people might be interested in chess but just find the typical game a bit too boring. […] Chess Invaders is poised to change all that for you. &#8221;</p><footer><strong>touchmyapps.com</strong> <cite><a href='http://www.touchmyapps.com/2013/02/20/10-new-app-store-games-in-review-february-11-17/'>www.touchmyapps.com/2013/02/20/&hellip;</a></cite></footer></blockquote>


<p><span class='pullquote-right' data-pullquote='sensationelle 3D-Grafiken'></p>

<blockquote><p>Schach ist öde und nur was für Langweiler und Nerds?? Chess Invaders definitiv nicht! Bereits beim Start überzeugt das Spiel von Entwickler Tim Tregubov durch sensationelle 3D-Grafiken. Ein besonders cooles Feature ist auch, dass es sich zwar eindeutig um Schach handelt, das Spiel aber eigentlich an etwas ganz anderes erinnert.</p><footer><strong>appgamers.de</strong> <cite><a href='http://www.appgamers.de/chess-invaders-abgespacetes-schach/'>www.appgamers.de/&hellip;</a></cite></footer></blockquote>


<p></span></p>

<!--more-->




<blockquote><p>Anyone can play this colorful flashy game, but not everyone can beat it!</p><footer><strong>AnkaLeoNika</strong> <cite><a href='https://itunes.apple.com/app/chess-invaders/id575380345'>itunes.apple.com/app/&hellip;</a></cite></footer></blockquote>




<blockquote><p>&#8220;Love the concept and the art!&#8221;</p><footer><strong>jenhuang87</strong> <cite><a href='https://itunes.apple.com/app/chess-invaders/id575380345'>itunes.apple.com/app/&hellip;</a></cite></footer></blockquote>


<p></p>

<p>Download it here:
<a href="https://itunes.apple.com/app/chess-invaders/id575380345">https://itunes.apple.com/app/chess-invaders/id575380345</a></p>

<p>People have been discovering some pretty cool bugs along the way: including floating pawns and exploding gui elements!  The game turns out to be pretty hard, and especially hard on smaller screens.  At the last minute, I added an option to slow the game down (under Settings), and made some tweaks to the spawn rate, but don&#8217;t be disheartened if you can&#8217;t beat it &#8211; only 32 people have so far.</p>

<p>All in all, I have had some great feedback and have learned a lot!  I&#8217;ve started working on the next game, a color mixing puzzle game, which is coming along much faster, after which I hope to revisit ChessInvaders and give it a good reworking to make it more fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chessInvaders update]]></title>
    <link href="http://timofei7.github.com/blog/2013/02/14/chessinvaders-update/"/>
    <updated>2013-02-14T01:40:00-05:00</updated>
    <id>http://timofei7.github.com/blog/2013/02/14/chessinvaders-update</id>
    <content type="html"><![CDATA[<p>ChessInvaders is submitted to the Apple App store and is pending review!  I have a <a href="http://timofei7.github.com/chessinvaders/webplayer/">limited functionality web port up</a>. Some stuff doesn&#8217;t work due to it being on the web rather than on iOS.  To pinch the screen hold down the option key.</p>

<p>Turns out that porting to the web wasn&#8217;t straightforward at all. The Unity web player runs in a partial trust environment which ends up affecting Coroutines in a weird way.  If you have some classes where you are overriding virtual IEnumerator or Coroutine methods but still want to call the base class versions then those trigger a ValidationException.  All my GUI code is built out of smaller components which all have virtual Coroutine TurnOn/TurnOff methods, blam, that won&#8217;t work on the web.  I hacked it up to work for now, but some functionality isn&#8217;t there (highscores) and its not worth it to try to redesign my GUI code right now.</p>

<p>Regardless, hopefully soon it&#8217;ll be coming to the app store on an iOS device near you!  Also it&#8217;ll be free.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wrapping Unity C# coroutines for exception handling, value retrieval, and locking]]></title>
    <link href="http://timofei7.github.com/blog/2013/02/05/unity-coroutine-wrapper/"/>
    <updated>2013-02-05T01:40:00-05:00</updated>
    <id>http://timofei7.github.com/blog/2013/02/05/unity-coroutine-wrapper</id>
    <content type="html"><![CDATA[<p>Firstly, coroutines are awesome.  If you aren&#8217;t familiar with them (particularly in the context of Unity3d) then you should be.  In short, <a href="http://en.wikipedia.org/wiki/Coroutine">coroutines</a> are methods that can suspend and resume execution.  In the context of Unity what this means is that you can have methods that appear to run concurrently. The Unity documentation has some <a href="http://docs.unity3d.com/Documentation/ScriptReference/index.Coroutines_26_Yield.html">examples</a>.</p>

<p>Coroutines are <strong>the</strong> way to script a lot of things in Unity, however there are a few problems that you may run into if you use them heavily: exception handling, return values, and locking. Especially if you use nested coroutines!</p>

<!--more-->


<h3>Return Values</h3>

<p>Coroutines in Unity, although built on iterators, don&#8217;t handle return values. Even though it appears as if you can return a value, internally return values are used to keep track of where to resume.  But, &#8220;I want a coroutine to return something!&#8221;, you say.  So you work around that using a callback:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">IEnumerator</span> <span class="nf">FooBar</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">yield</span> <span class="k">return</span> <span class="nf">StartCoroutine</span><span class="p">(</span><span class="n">DoSomethingEverySecond</span><span class="p">(</span><span class="n">success</span><span class="p">=&gt;</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">success</span><span class="p">)</span>
</span><span class='line'>          <span class="n">doMoreStuff</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">IEnumerator</span> <span class="nf">DoSomethingEverySecond</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Action</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">&gt;</span> <span class="n">success</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">bool</span> <span class="n">result</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>  <span class="k">foreach</span> <span class="p">(</span><span class="n">Something</span> <span class="n">s</span> <span class="k">in</span> <span class="n">somethings</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">doStuff</span><span class="p">())</span>
</span><span class='line'>          <span class="n">result</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>      <span class="k">yield</span> <span class="k">return</span> <span class="k">new</span> <span class="nf">WaitForSeconds</span><span class="p">(</span><span class="m">1f</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">success</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="n">success</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok so this helps with getting a return value out of a coroutine.  It works well enough. Only caveat is in the callback code you can&#8217;t do another yield, not a big problem, and solveable by setting some variables. We&#8217;ll return to this topic.</p>

<h3>Exception Handling</h3>

<p>There is no exception handling at the coroutine level.  You can&#8217;t put a <code>yield</code> statement in a <code>try…catch</code> block.  This in particular can cause a problem if you have nested coroutines:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">void</span> <span class="nf">Start</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">try</span> <span class="p">{</span> <span class="n">StartCoroutine</span><span class="p">(</span><span class="n">ParentCoroutine</span><span class="p">());</span> <span class="p">}</span> <span class="c1">//can try...catch if there&#39;s no yielding</span>
</span><span class='line'>  <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span> <span class="n">Debug</span><span class="p">.</span><span class="n">LogError</span><span class="p">(</span><span class="s">&quot;oh noes we had a problem: &quot;</span> <span class="p">+</span> <span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">IEnumerator</span> <span class="nf">ParentCoroutine</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">yield</span> <span class="k">return</span> <span class="nf">StartCoroutine</span><span class="p">(</span><span class="n">NestedCoroutineDoSomeStuff</span><span class="p">());</span>  <span class="c1">//can&#39;t try...catch these</span>
</span><span class='line'>  <span class="k">yield</span> <span class="k">return</span> <span class="nf">StartCoroutine</span><span class="p">(</span><span class="n">NestedCoroutineFoo</span><span class="p">());</span> <span class="c1">//if this has an exception nothing below executes</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">stuff</span><span class="p">)</span>
</span><span class='line'>      <span class="k">yield</span> <span class="k">return</span> <span class="nf">StartCoroutine</span><span class="p">(</span><span class="n">NestedCoroutineBar</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Logically, if any of the nested coroutines throw an exception then the parent will stop execution.  Now, this is only fair, but since you can&#8217;t <code>try…catch</code> the nested coroutines it forces you to have to do error handling at a much more obnoxious nested level.  You have to make sure to handle all exceptions in each subroutine, even if it doesn&#8217;t really make sense to do that.  For instance you have a MovePiece coroutine,  if it fails (say the piece was attacked mid move) what you&#8217;d like to do in the parent coroutine (which is something like AttackState) is notice the failed move and handle it there.  If the MovePiece coroutine does a bunch of stuff (set some flags, run a few different animations) the parent probably only cares whether it was successfull or not.  You could use a callback like above to indicate success but, this doesn&#8217;t help if MovePiece threw an exception.  In that case the parent coroutine exits and we&#8217;re stuck handling the exception at too high a level (say in a non-coroutine above the parent). Not ideal.</p>

<p>Ideally we&#8217;d be able to catch any exception per coroutine (nested or not) allowing us to think of each coroutine as a logical unit as it should be.  A great solution for this <a href="http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know">exists</a>. Part of this solution is also a better way to handle return values without having to use a callback.  This uses a parametrized wrapper to Coroutine and allows us to handle exceptions and return values like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">Coroutine</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">&gt;</span> <span class="n">dostuff</span> <span class="p">=</span> <span class="n">StartCoroutine</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">&gt;(</span><span class="n">DoStuff</span><span class="p">());</span> <span class="c1">// declare a return value type</span>
</span><span class='line'><span class="k">yield</span> <span class="k">return</span> <span class="n">dostuff</span><span class="p">.</span><span class="n">coroutine</span><span class="p">;</span>
</span><span class='line'><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">dostuff</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>  <span class="c1">//attempt to access the return value</span>
</span><span class='line'>      <span class="n">NextStuff</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//and handle any exceptions here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>That is much better!  Now the child exits without interrupting the parent and the parent can deal with it appropriately (exceptions and return values).  Now, what&#8217;s this about locking?</p>

<h3>Locking</h3>

<p>The other problem is locking.  Coroutines (although technically not multi-threaded in Unity) do cause concurrency problems!  What if, based on user input, you start a Coroutine multiple times and it operates on the same objects?  A mess can ensue.  One solution in Unity is that you can start a coroutine using a string name of the IEnumerator method.  This uses reflection and is yucky.  Who want to use strings when you&#8217;re using a nice strongly typed language like C#?  But, if you use strings you can do <code>StopCoroutine("DoStuff"); StartCoroutine("DoStuff")</code>.  Another option is to just have some instance variable bool and appropriate logic for every coroutine.  This too gets messy quickly with lots of coroutines.</p>

<p>These techniques get you part of the way but what if you want a coroutine to actually just block/wait for a previous instance to finish running like traditional locking but without any undue messiness?  Well using <code>lock(someobject)</code> doesn&#8217;t work, because it would only be evaluated once and isn&#8217;t checked on the coroutine resume.  Some people have written large coroutine managers that help with all these problems but those seemed like overkill so I built on the exception handling stuff and added locking support. The idea is that you start the coroutine with a string identifier (if none is given no locking is performed) and an optional timeout period.  With the string identifier each MonoBehavior keeps the currently running coroutines in a queue and either yields (analogous to blocking on a lock) until it&#8217;s turn comes up or bails on a timeout.  Like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">StartCoroutine</span><span class="p">(</span><span class="n">DoStuff</span><span class="p">(),</span> <span class="s">&quot;DoStuff&quot;</span><span class="p">,</span> <span class="m">10f</span><span class="p">);</span> <span class="c1">// will yield null</span>
</span><span class='line'>                                           <span class="c1">// if any previous &quot;DoStuff&quot;s are running up to 10seconds</span>
</span></code></pre></td></tr></table></div></figure>


<p>The easiest way to use this is to extend MonoBehaviour and use the new class as the base class for all your MonoBehaviours.  Here is mine:</p>

<figure class='code'><figcaption><span>My MonoBehaviour Base Class   (TTMonoBehaviour.cs)</span> <a href='http://timofei7.github.com/downloads/code/csharp/TTMonoBehaviour.cs'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">UnityEngine</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'><span class="c1">/// Extending MonoBehaviour to add some extra functionality</span>
</span><span class='line'><span class="c1">/// Exception handling from: http://twistedoakstudios.com/blog/Post83_coroutines-more-than-you-want-to-know</span>
</span><span class='line'><span class="c1">/// </span>
</span><span class='line'><span class="c1">/// 2013 Tim Tregubov</span>
</span><span class='line'><span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">TTMonoBehaviour</span> <span class="p">:</span> <span class="n">MonoBehaviour</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">private</span> <span class="n">LockQueue</span> <span class="n">LockedCoroutineQueue</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// Coroutine with return value AND exception handling on the return value. </span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="k">public</span> <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">StartCoroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">coroutineObj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;();</span>
</span><span class='line'>      <span class="n">coroutineObj</span><span class="p">.</span><span class="n">coroutine</span> <span class="p">=</span> <span class="k">base</span><span class="p">.</span><span class="n">StartCoroutine</span><span class="p">(</span><span class="n">coroutineObj</span><span class="p">.</span><span class="n">InternalRoutine</span><span class="p">(</span><span class="n">coroutine</span><span class="p">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">coroutineObj</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// Lockable coroutine. Can either wait for a previous coroutine to finish or a timeout or just bail if previous one isn&#39;t done.</span>
</span><span class='line'>  <span class="c1">/// Caution: the default timeout is 10 seconds. Coroutines that timeout just drop so if its essential increase this timeout.</span>
</span><span class='line'>  <span class="c1">/// Set waitTime to 0 for no wait</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="k">public</span> <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">StartCoroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">,</span> <span class="kt">string</span> <span class="n">lockID</span><span class="p">,</span> <span class="kt">float</span> <span class="n">waitTime</span> <span class="p">=</span> <span class="m">10f</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">LockedCoroutineQueue</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span> <span class="n">LockedCoroutineQueue</span> <span class="p">=</span> <span class="k">new</span> <span class="n">LockQueue</span><span class="p">();</span>
</span><span class='line'>      <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">coroutineObj</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">waitTime</span><span class="p">,</span> <span class="n">LockedCoroutineQueue</span><span class="p">);</span>
</span><span class='line'>      <span class="n">coroutineObj</span><span class="p">.</span><span class="n">coroutine</span> <span class="p">=</span> <span class="k">base</span><span class="p">.</span><span class="n">StartCoroutine</span><span class="p">(</span><span class="n">coroutineObj</span><span class="p">.</span><span class="n">InternalRoutine</span><span class="p">(</span><span class="n">coroutine</span><span class="p">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">coroutineObj</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// Coroutine with return value AND exception handling AND lockable</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">class</span> <span class="nc">Coroutine</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">private</span> <span class="n">T</span> <span class="n">returnVal</span><span class="p">;</span>
</span><span class='line'>      <span class="k">private</span> <span class="n">Exception</span> <span class="n">e</span><span class="p">;</span>
</span><span class='line'>      <span class="k">private</span> <span class="kt">string</span> <span class="n">lockID</span><span class="p">;</span>
</span><span class='line'>      <span class="k">private</span> <span class="kt">float</span> <span class="n">waitTime</span><span class="p">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">private</span> <span class="n">LockQueue</span> <span class="n">lockedCoroutines</span><span class="p">;</span> <span class="c1">//reference to objects lockdict</span>
</span><span class='line'>      <span class="k">private</span> <span class="kt">bool</span> <span class="n">lockable</span><span class="p">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">public</span> <span class="n">Coroutine</span> <span class="n">coroutine</span><span class="p">;</span>
</span><span class='line'>      <span class="k">public</span> <span class="n">T</span> <span class="n">Value</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">get</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">e</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="k">throw</span> <span class="n">e</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">returnVal</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">public</span> <span class="nf">Coroutine</span><span class="p">()</span> <span class="p">{</span> <span class="n">lockable</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">public</span> <span class="nf">Coroutine</span><span class="p">(</span><span class="kt">string</span> <span class="n">lockID</span><span class="p">,</span> <span class="kt">float</span> <span class="n">waitTime</span><span class="p">,</span> <span class="n">LockQueue</span> <span class="n">lockedCoroutines</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="n">lockable</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="n">lockID</span> <span class="p">=</span> <span class="n">lockID</span><span class="p">;</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="n">lockedCoroutines</span> <span class="p">=</span> <span class="n">lockedCoroutines</span><span class="p">;</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="n">waitTime</span> <span class="p">=</span> <span class="n">waitTime</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">public</span> <span class="n">IEnumerator</span> <span class="nf">InternalRoutine</span><span class="p">(</span><span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">lockable</span> <span class="p">&amp;&amp;</span> <span class="n">lockedCoroutines</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>        
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">lockID</span><span class="p">))</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">waitTime</span> <span class="p">==</span> <span class="m">0f</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="c1">//Debug.Log(this.GetType().Name + &quot;: coroutine already running and wait not requested so exiting: &quot; + lockID);</span>
</span><span class='line'>                      <span class="k">yield</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  <span class="k">else</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="c1">//Debug.Log(this.GetType().Name + &quot;: previous coroutine already running waiting max &quot; + waitTime + &quot; for my turn: &quot; + lockID);</span>
</span><span class='line'>                      <span class="kt">float</span> <span class="n">starttime</span> <span class="p">=</span> <span class="n">Time</span><span class="p">.</span><span class="n">time</span><span class="p">;</span>
</span><span class='line'>                      <span class="kt">float</span> <span class="n">counter</span> <span class="p">=</span> <span class="m">0f</span><span class="p">;</span>
</span><span class='line'>                      <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>                      <span class="k">while</span> <span class="p">(!</span><span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">First</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">)</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">Time</span><span class="p">.</span><span class="n">time</span> <span class="p">-</span> <span class="n">starttime</span><span class="p">)</span> <span class="p">&lt;</span> <span class="n">waitTime</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">{</span>
</span><span class='line'>                          <span class="k">yield</span> <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>                          <span class="n">counter</span> <span class="p">+=</span> <span class="n">Time</span><span class="p">.</span><span class="n">deltaTime</span><span class="p">;</span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                      <span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="p">&gt;=</span> <span class="n">waitTime</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">{</span>
</span><span class='line'>                          <span class="kt">string</span> <span class="n">error</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;: coroutine &quot;</span> <span class="p">+</span> <span class="n">lockID</span> <span class="p">+</span> <span class="s">&quot; bailing! due to timeout: &quot;</span> <span class="p">+</span> <span class="n">counter</span><span class="p">;</span>
</span><span class='line'>                          <span class="n">Debug</span><span class="p">.</span><span class="n">LogError</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>                          <span class="k">this</span><span class="p">.</span><span class="n">e</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Exception</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>                          <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>                          <span class="k">yield</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="k">try</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(!</span><span class="n">coroutine</span><span class="p">.</span><span class="n">MoveNext</span><span class="p">())</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="k">if</span> <span class="p">(</span><span class="n">lockable</span><span class="p">)</span> <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>                      <span class="k">yield</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="k">this</span><span class="p">.</span><span class="n">e</span> <span class="p">=</span> <span class="n">e</span><span class="p">;</span>
</span><span class='line'>                  <span class="n">Debug</span><span class="p">.</span><span class="n">LogError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">Name</span> <span class="p">+</span> <span class="s">&quot;: caught Coroutine exception! &quot;</span> <span class="p">+</span> <span class="n">e</span><span class="p">.</span><span class="n">Message</span> <span class="p">+</span> <span class="s">&quot;\n&quot;</span> <span class="p">+</span> <span class="n">e</span><span class="p">.</span><span class="n">StackTrace</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">lockable</span><span class="p">)</span> <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">yield</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="kt">object</span> <span class="n">yielded</span> <span class="p">=</span> <span class="n">coroutine</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">yielded</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">yielded</span><span class="p">.</span><span class="n">GetType</span><span class="p">()</span> <span class="p">==</span> <span class="k">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">))</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="n">returnVal</span> <span class="p">=</span> <span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="n">yielded</span><span class="p">;</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">lockable</span><span class="p">)</span> <span class="n">lockedCoroutines</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">yield</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="k">yield</span> <span class="k">return</span> <span class="n">coroutine</span><span class="p">.</span><span class="n">Current</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// coroutine lock and queue</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">class</span> <span class="nc">LockQueue</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">private</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">IEnumerator</span><span class="p">&gt;&gt;</span> <span class="n">LockedCoroutines</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">public</span> <span class="nf">LockQueue</span><span class="p">()</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="n">LockedCoroutines</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">IEnumerator</span><span class="p">&gt;&gt;();</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>      <span class="c1">/// check if LockID is locked</span>
</span><span class='line'>      <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>      <span class="k">public</span> <span class="kt">bool</span> <span class="nf">Contains</span><span class="p">(</span><span class="kt">string</span> <span class="n">lockID</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">LockedCoroutines</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">lockID</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>      <span class="c1">/// check if given coroutine is first in the queue</span>
</span><span class='line'>      <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>      <span class="k">public</span> <span class="kt">bool</span> <span class="nf">First</span><span class="p">(</span><span class="kt">string</span> <span class="n">lockID</span><span class="p">,</span> <span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="kt">bool</span> <span class="n">ret</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">Contains</span><span class="p">(</span><span class="n">lockID</span><span class="p">))</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Count</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="n">ret</span> <span class="p">=</span> <span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">][</span><span class="m">0</span><span class="p">]</span> <span class="p">==</span> <span class="n">coroutine</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>      <span class="c1">/// Add the specified lockID and coroutine to the coroutine lockqueue</span>
</span><span class='line'>      <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>      <span class="k">public</span> <span class="k">void</span> <span class="nf">Add</span><span class="p">(</span><span class="kt">string</span> <span class="n">lockID</span><span class="p">,</span> <span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(!</span><span class="n">LockedCoroutines</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">lockID</span><span class="p">))</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="n">LockedCoroutines</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">lockID</span><span class="p">,</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">IEnumerator</span><span class="p">&gt;());</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">if</span> <span class="p">(!</span><span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Contains</span><span class="p">(</span><span class="n">coroutine</span><span class="p">))</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Add</span><span class="p">(</span><span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>      <span class="c1">/// Remove the specified coroutine and queue if empty</span>
</span><span class='line'>      <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>      <span class="k">public</span> <span class="kt">bool</span> <span class="nf">Remove</span><span class="p">(</span><span class="kt">string</span> <span class="n">lockID</span><span class="p">,</span> <span class="n">IEnumerator</span> <span class="n">coroutine</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>          <span class="kt">bool</span> <span class="n">ret</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">LockedCoroutines</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">lockID</span><span class="p">))</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Contains</span><span class="p">(</span><span class="n">coroutine</span><span class="p">))</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="n">ret</span> <span class="p">=</span> <span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">coroutine</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">LockedCoroutines</span><span class="p">[</span><span class="n">lockID</span><span class="p">].</span><span class="n">Count</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="n">ret</span> <span class="p">=</span> <span class="n">LockedCoroutines</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">lockID</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>What do you think?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[generic singleton MonoBehavior part 2: singleton self loading prefab]]></title>
    <link href="http://timofei7.github.com/blog/2013/01/11/unity-prefab-singleton/"/>
    <updated>2013-01-11T01:40:00-05:00</updated>
    <id>http://timofei7.github.com/blog/2013/01/11/unity-prefab-singleton</id>
    <content type="html"><![CDATA[<p>I had a <a href="blog/2012/04/26/unity-singletons/">previous post</a> about singletons in <a href="http://www.unity3d.com">Unity3D</a> and have since added a useful functionality to that class.  One of the useful features of a singleton is that it is self instantiating.  But what if you want to use the Unity editor to expose some public variables and have some other assets hooked into your singleton?  So since you are probably using <a href="http://docs.unity3d.com/Documentation/Manual/Prefabs.html">prefabs</a> to manage game components in your scenes anyway, seems like it might be useful to have a self-loading prefab for components such as the player or a gui controller.</p>

<p>Just as singletons allow for really nice static access methods, this would allow me to really easily organize my project as a bunch of prefabs dumped into the Resources directory and when a level needed a particular component it would just use it, no need to instantiate and keep a reference within some big main class, nor keep it in the scene heirarchy at all to begin with.</p>

<!--more-->


<p></p>

<p>Below is my updated singleton class. What I ended up doing was adding an Attribute so you could just define the Prefab attribute for any singletons that did have associated prefabs and off you go.  I have left in some debug statements commented out for clarity.  The only caveat is that of course you could accidentally have added multiple instances of the prefab in your scene &#8211; what I do now is to just throw an exception if that is the case (an alternative may be to just choose one and self-destruct the others but deciding which is correct is unclear).</p>

<figure class='code'><figcaption><span>Singleton.cs # </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">using</span> <span class="n">UnityEngine</span><span class="p">;</span>
</span><span class='line'><span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">Collections</span><span class="p">;</span>
</span><span class='line'><span class="n">using</span> <span class="n">System</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'><span class="c1">/// Prefab attribute. Use this on child classes</span>
</span><span class='line'><span class="c1">/// to define if they have a prefab associated or not</span>
</span><span class='line'><span class="c1">/// By default will attempt to load a prefab</span>
</span><span class='line'><span class="c1">/// that has the same name as the class,</span>
</span><span class='line'><span class="c1">/// otherwise [Prefab(&quot;path/to/prefab&quot;)] to define it specifically. </span>
</span><span class='line'><span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'><span class="p">[</span><span class="n">AttributeUsage</span><span class="p">(</span><span class="n">AttributeTargets</span><span class="p">.</span><span class="n">Class</span><span class="p">,</span><span class="n">Inherited</span> <span class="o">=</span> <span class="nb">true</span><span class="p">)]</span>
</span><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">PrefabAttribute</span> <span class="o">:</span> <span class="n">Attribute</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">string</span> <span class="n">_name</span><span class="p">;</span>
</span><span class='line'>  <span class="n">public</span> <span class="n">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="n">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">this</span><span class="p">.</span><span class="n">_name</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">public</span> <span class="n">PrefabAttribute</span><span class="p">()</span> <span class="p">{</span> <span class="n">this</span><span class="p">.</span><span class="n">_name</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">PrefabAttribute</span><span class="p">(</span><span class="n">string</span> <span class="n">name</span><span class="p">)</span> <span class="p">{</span> <span class="n">this</span><span class="p">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'><span class="c1">/// MONOBEHAVIOR PSEUDO SINGLETON ABSTRACT CLASS</span>
</span><span class='line'><span class="c1">/// usage        : can be attached to a gameobject and if not</span>
</span><span class='line'><span class="c1">///          : this will create one on first access</span>
</span><span class='line'><span class="c1">/// example      : &#39;&#39;&#39;public sealed class MyClass : Singleton&lt;MyClass&gt; {&#39;&#39;&#39;</span>
</span><span class='line'><span class="c1">/// references   : http://tinyurl.com/d498g8c</span>
</span><span class='line'><span class="c1">///          : http://tinyurl.com/cc73a9h</span>
</span><span class='line'><span class="c1">///          : http://unifycommunity.com/wiki/index.php?title=Singleton</span>
</span><span class='line'><span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'><span class="n">public</span> <span class="n">abstract</span> <span class="n">class</span> <span class="n">Singleton</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">:</span> <span class="n">MonoBehaviour</span> <span class="n">where</span> <span class="n">T</span> <span class="o">:</span> <span class="n">MonoBehaviour</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">private</span> <span class="k">static</span> <span class="n">T</span> <span class="n">_instance</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">bool</span> <span class="n">IsAwake</span> <span class="p">{</span> <span class="n">get</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">!=</span> <span class="n">null</span><span class="p">);</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// gets the instance of this Singleton</span>
</span><span class='line'>  <span class="c1">/// use this for all instance calls:</span>
</span><span class='line'>  <span class="c1">/// MyClass.Instance.MyMethod();</span>
</span><span class='line'>  <span class="c1">/// or make your public methods static</span>
</span><span class='line'>  <span class="c1">/// and have them use Instance internally</span>
</span><span class='line'>  <span class="c1">/// for a nice clean interface</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">T</span> <span class="n">Instance</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">get</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">Type</span> <span class="n">mytype</span> <span class="o">=</span> <span class="n">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">_instance</span> <span class="o">=</span> <span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="n">FindObjectOfType</span> <span class="p">(</span><span class="n">mytype</span><span class="p">);</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="c1">//Debug.Log(&quot;initializing instance of: &quot; + mytype.Name);</span>
</span><span class='line'>                  <span class="n">string</span> <span class="n">goName</span> <span class="o">=</span> <span class="n">mytype</span><span class="p">.</span><span class="n">ToString</span> <span class="p">();</span>
</span><span class='line'>                  <span class="n">GameObject</span> <span class="n">go</span> <span class="o">=</span> <span class="n">GameObject</span><span class="p">.</span><span class="n">Find</span> <span class="p">(</span><span class="n">goName</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">go</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="c1">// try again searching for a cloned object</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="n">go</span> <span class="o">=</span> <span class="n">GameObject</span><span class="p">.</span><span class="n">Find</span> <span class="p">(</span><span class="n">goName</span><span class="o">+</span><span class="s">&quot;(Clone)&quot;</span><span class="p">);</span>
</span><span class='line'>                      <span class="k">if</span> <span class="p">(</span><span class="n">go</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">{</span>
</span><span class='line'>                          <span class="c1">//Debug.Log(&quot;found clone of object using it!&quot;); </span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">go</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="c1">//if still not found try prefab or create</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="n">bool</span> <span class="n">hasPrefab</span> <span class="o">=</span> <span class="n">Attribute</span><span class="p">.</span><span class="n">IsDefined</span><span class="p">(</span><span class="n">mytype</span><span class="p">,</span> <span class="n">typeof</span><span class="p">(</span><span class="n">PrefabAttribute</span><span class="p">));</span>
</span><span class='line'>                      <span class="c1">// checks if the [Prefab] attribute is set and pulls that if it can</span>
</span><span class='line'>                      <span class="k">if</span> <span class="p">(</span><span class="n">hasPrefab</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">{</span>
</span><span class='line'>                          <span class="n">PrefabAttribute</span> <span class="n">attr</span> <span class="o">=</span> <span class="p">(</span><span class="n">PrefabAttribute</span><span class="p">)</span><span class="n">Attribute</span><span class="p">.</span><span class="n">GetCustomAttribute</span><span class="p">(</span><span class="n">mytype</span><span class="p">,</span><span class="n">typeof</span><span class="p">(</span><span class="n">PrefabAttribute</span><span class="p">));</span>
</span><span class='line'>                          <span class="n">string</span> <span class="n">prefabname</span> <span class="o">=</span> <span class="n">attr</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span>
</span><span class='line'>                          <span class="c1">//Debug.LogWarning(goName + &quot; not found attempting to instantiate prefab... either: &quot; + goName + &quot; or: &quot; + prefabname);</span>
</span><span class='line'>                          <span class="n">try</span>
</span><span class='line'>                          <span class="p">{</span>
</span><span class='line'>                              <span class="k">if</span> <span class="p">(</span><span class="n">prefabname</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                                  <span class="n">go</span> <span class="o">=</span> <span class="p">(</span><span class="n">GameObject</span><span class="p">)</span><span class="n">Instantiate</span><span class="p">(</span><span class="n">Resources</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">prefabname</span><span class="p">,</span> <span class="n">typeof</span><span class="p">(</span><span class="n">GameObject</span><span class="p">)));</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                              <span class="k">else</span>
</span><span class='line'>                              <span class="p">{</span>
</span><span class='line'>                                  <span class="n">go</span> <span class="o">=</span> <span class="p">(</span><span class="n">GameObject</span><span class="p">)</span><span class="n">Instantiate</span><span class="p">(</span><span class="n">Resources</span><span class="p">.</span><span class="n">Load</span><span class="p">(</span><span class="n">goName</span><span class="p">,</span> <span class="n">typeof</span><span class="p">(</span><span class="n">GameObject</span><span class="p">)));</span>
</span><span class='line'>                              <span class="p">}</span>
</span><span class='line'>                          <span class="p">}</span> <span class="n">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>                          <span class="p">{</span>
</span><span class='line'>                              <span class="n">Debug</span><span class="p">.</span><span class="n">LogError</span><span class="p">(</span><span class="s">&quot;could not instantiate prefab even though prefab attribute was set: &quot;</span> <span class="o">+</span> <span class="n">e</span><span class="p">.</span><span class="n">Message</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="p">.</span><span class="n">StackTrace</span><span class="p">);</span>
</span><span class='line'>                          <span class="p">}</span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                      <span class="k">if</span> <span class="p">(</span><span class="n">go</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">{</span>
</span><span class='line'>                          <span class="c1">//Debug.LogWarning(goName + &quot; not found creating...&quot;);</span>
</span><span class='line'>                          <span class="n">go</span> <span class="o">=</span> <span class="n">new</span> <span class="n">GameObject</span> <span class="p">();</span>
</span><span class='line'>                          <span class="n">go</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">goName</span><span class="p">;</span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  <span class="n">_instance</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="n">GetComponent</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">();</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="n">_instance</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="n">AddComponent</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">();</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>              <span class="p">{</span>
</span><span class='line'>                  <span class="c1">//Debug.Log(mytype.Name + &quot; had to be searched for but was found&quot;); </span>
</span><span class='line'>                  <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="n">FindObjectsOfType</span><span class="p">(</span><span class="n">mytype</span><span class="p">).</span><span class="n">Length</span><span class="p">;</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="n">Debug</span><span class="p">.</span><span class="n">LogError</span><span class="p">(</span><span class="s">&quot;Singleton: there are &quot;</span> <span class="o">+</span> <span class="n">count</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="o">+</span> <span class="s">&quot; of &quot;</span> <span class="o">+</span> <span class="n">mytype</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
</span><span class='line'>                      <span class="n">throw</span> <span class="n">new</span> <span class="n">Exception</span><span class="p">(</span><span class="s">&quot;Too many (&quot;</span> <span class="o">+</span> <span class="n">count</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="o">+</span> <span class="s">&quot;) prefab singletons of type: &quot;</span> <span class="o">+</span> <span class="n">mytype</span><span class="p">.</span><span class="n">Name</span><span class="p">);</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>          <span class="k">return</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// for garbage collection</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">virtual</span> <span class="kt">void</span> <span class="n">OnApplicationQuit</span> <span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">// release reference on exit</span>
</span><span class='line'>      <span class="n">_instance</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// in your child class you can implement Awake()</span>
</span><span class='line'>  <span class="c1">//     and add any initialization code you want such as</span>
</span><span class='line'>  <span class="c1">//     DontDestroyOnLoad(this.gameObject);</span>
</span><span class='line'>  <span class="c1">//     if you want this to persist across loads</span>
</span><span class='line'>  <span class="c1">//  or if you want to set a parent object with SetParent()</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// parent this to another gameobject by string</span>
</span><span class='line'>  <span class="c1">/// call from Awake if you so desire</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">protected</span> <span class="kt">void</span> <span class="n">SetParent</span> <span class="p">(</span><span class="n">string</span> <span class="n">parentGOName</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">parentGOName</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">GameObject</span> <span class="n">parentGO</span> <span class="o">=</span> <span class="n">GameObject</span><span class="p">.</span><span class="n">Find</span> <span class="p">(</span><span class="n">parentGOName</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">parentGO</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">parentGO</span> <span class="o">=</span> <span class="n">new</span> <span class="n">GameObject</span> <span class="p">();</span>
</span><span class='line'>              <span class="n">parentGO</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">parentGOName</span><span class="p">;</span>
</span><span class='line'>              <span class="n">parentGO</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">this</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parentGO</span><span class="p">.</span><span class="n">transform</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>What do you think?  Only other caveats are those associated with using the <a href="http://docs.unity3d.com/Documentation/ScriptReference/Resources.html">Resources folder</a> in general such as not being able to strip out components that aren&#8217;t used.  Since my games so far have been small this hasn&#8217;t been an issue and I know that I should clean out any resources that I&#8217;m definitely not using.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chessInvaders update]]></title>
    <link href="http://timofei7.github.com/blog/2012/11/25/chessinvaders-update/"/>
    <updated>2012-11-25T01:40:00-05:00</updated>
    <id>http://timofei7.github.com/blog/2012/11/25/chessinvaders-update</id>
    <content type="html"><![CDATA[<p>Been too busy to post updates, but finally making progress on chessInvaders again.  An alpha version of the game was shown at a <a href="http://now.dartmouth.edu/2012/05/dartmouth-digital-arts-students-work-showcased-in-downtown-hanover/">Digital Arts Showcase</a> and was a great success.  One kid couldn&#8217;t put it down and played for half an hour straight refusing to let anybody else try.  I was able to get some positive feedback and am now planning on releasing it for the Christmas season (if it gets through the App Store approval in time).</p>

<!--MORE-->



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[generic singleton MonoBehavior class]]></title>
    <link href="http://timofei7.github.com/blog/2012/04/26/unity-singletons/"/>
    <updated>2012-04-26T01:40:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2012/04/26/unity-singletons</id>
    <content type="html"><![CDATA[<p>In <a href="http://www.unity3d.com">Unity3D</a> having a <a href="http://en.wikipedia.org/wiki/Singleton_pattern">singleton</a> class is very useful, whether for &#8220;global&#8221; state or simply for the convenience of having a static accessor so you don&#8217;t have to have lots of: <code>FindObjectOfType(typeof(Builder)) as Builder;</code></p>

<p>So you code up a C# singleton and then realize that you actually need it to be a <a href="http://unity3d.com/support/documentation/ScriptReference/MonoBehaviour.html">MonoBehavior</a>, not just a <a href="http://unity3d.com/support/documentation/ScriptReference/ScriptableObject.html">ScriptableObject</a> &#8211; say you want the singleton to run <a href="http://unity3d.com/support/documentation/ScriptReference/index.Coroutines_26_Yield.html">coroutines</a>, or have a transform, or any other MonoBehavior feature.  But monobehaviors <a href="http://unity3d.com/support/documentation/ScriptReference/MonoBehaviour.Awake.html">can&#8217;t</a> be initialized with a constructor.</p>

<p>So what you want is a monobehavior pseudo singleton pattern.  The unity community wiki has some <a href="http://unifycommunity.com/wiki/index.php?title=Singleton">good info</a>
 about the various options but all require boilerplate.</p>

<p>So I wrote a parametrized generic pseudo singleton monobehavior class.  I attempted to compile all the best advice out there, so it is threadsafe, has some extra stuff for setting a parent, doesn&#8217;t implement an Awake, and initializes lazily.</p>

<!--more-->


<p></p>

<p>The key was the C# <a href="http://msdn.microsoft.com/en-us/library/d5x73970.aspx">where</a> keyword, used to constrain the parameterizing type. So in this case both the class is a MonoBehavior and its parameterization type is a MonoBehavior.</p>

<p>So now this blog has its first code section:</p>

<figure class='code'><figcaption><span>Singleton.cs # </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">using</span> <span class="n">UnityEngine</span><span class="p">;</span>
</span><span class='line'><span class="n">using</span> <span class="n">System</span><span class="p">.</span><span class="n">Collections</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'><span class="c1">/// MONOBEHAVIOR PSEUDO SINGLETON ABSTRACT CLASS</span>
</span><span class='line'><span class="c1">/// usage    : best is to be attached to a gameobject but if not that is ok,</span>
</span><span class='line'><span class="c1">///      : this will create one on first access</span>
</span><span class='line'><span class="c1">/// example  : &#39;&#39;&#39;public sealed class MyClass : Singleton&lt;MyClass&gt; {&#39;&#39;&#39;</span>
</span><span class='line'><span class="c1">/// references   : http://tinyurl.com/d498g8c</span>
</span><span class='line'><span class="c1">///      : http://tinyurl.com/cc73a9h</span>
</span><span class='line'><span class="c1">///      : http://unifycommunity.com/wiki/index.php?title=Singleton</span>
</span><span class='line'><span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'><span class="n">public</span> <span class="n">abstract</span> <span class="n">class</span> <span class="n">Singleton</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">:</span> <span class="n">MonoBehaviour</span> <span class="n">where</span> <span class="n">T</span> <span class="o">:</span> <span class="n">MonoBehaviour</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">private</span> <span class="k">static</span> <span class="n">T</span> <span class="n">_instance</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>          
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// gets the instance of this Singleton</span>
</span><span class='line'>  <span class="c1">/// use this for all instance calls:</span>
</span><span class='line'>  <span class="c1">/// MyClass.Instance.MyMethod();</span>
</span><span class='line'>  <span class="c1">/// or make your public methods static</span>
</span><span class='line'>  <span class="c1">/// and have them use Instance</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">T</span> <span class="n">Instance</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">get</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">_instance</span> <span class="o">=</span> <span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="n">FindObjectOfType</span> <span class="p">(</span><span class="n">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">));</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">_instance</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="n">string</span> <span class="n">goName</span> <span class="o">=</span> <span class="n">typeof</span><span class="p">(</span><span class="n">T</span><span class="p">).</span><span class="n">ToString</span> <span class="p">();</span>           
</span><span class='line'>                  
</span><span class='line'>                  <span class="n">GameObject</span> <span class="n">go</span> <span class="o">=</span> <span class="n">GameObject</span><span class="p">.</span><span class="n">Find</span> <span class="p">(</span><span class="n">goName</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="n">go</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                      <span class="n">go</span> <span class="o">=</span> <span class="n">new</span> <span class="n">GameObject</span> <span class="p">();</span>
</span><span class='line'>                      <span class="n">go</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">goName</span><span class="p">;</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="n">_instance</span> <span class="o">=</span> <span class="n">go</span><span class="p">.</span><span class="n">AddComponent</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="p">();</span>                 
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">_instance</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// for garbage collection</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">virtual</span> <span class="kt">void</span> <span class="n">OnApplicationQuit</span> <span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">// release reference on exit</span>
</span><span class='line'>      <span class="n">_instance</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// in your child class you can implement Awake()</span>
</span><span class='line'>  <span class="c1">// and add any initialization code you want such as</span>
</span><span class='line'>  <span class="c1">// DontDestroyOnLoad(go);</span>
</span><span class='line'>  <span class="c1">// if you want this to persist across loads</span>
</span><span class='line'>  <span class="c1">// or if you want to set a parent object with SetParent()</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">/// &lt;summary&gt;</span>
</span><span class='line'>  <span class="c1">/// parent this to another gameobject by string</span>
</span><span class='line'>  <span class="c1">/// call from Awake if you so desire</span>
</span><span class='line'>  <span class="c1">/// &lt;/summary&gt;</span>
</span><span class='line'>  <span class="n">protected</span> <span class="kt">void</span> <span class="n">SetParent</span> <span class="p">(</span><span class="n">string</span> <span class="n">parentGOName</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">parentGOName</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">GameObject</span> <span class="n">parentGO</span> <span class="o">=</span> <span class="n">GameObject</span><span class="p">.</span><span class="n">Find</span> <span class="p">(</span><span class="n">parentGOName</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">parentGO</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">parentGO</span> <span class="o">=</span> <span class="n">new</span> <span class="n">GameObject</span> <span class="p">();</span>
</span><span class='line'>              <span class="n">parentGO</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">parentGOName</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">this</span><span class="p">.</span><span class="n">transform</span><span class="p">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parentGO</span><span class="p">.</span><span class="n">transform</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[udunit]]></title>
    <link href="http://timofei7.github.com/blog/2012/04/09/udunit/"/>
    <updated>2012-04-09T01:40:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2012/04/09/udunit</id>
    <content type="html"><![CDATA[<p>Over a couple of weekends, mostly as an exercise in learning a new language / framework two friends of mine and I came up with: <a href="http://udunnit-frontend-dev.herokuapp.com">demo.udunit.com</a>.</p>

<p>In a nutshell it is:<br/>
UdunIt (pronounced you-done-it, as in whodunit): A fun way to share, boast about and track your progress towards major life accomplishments, as well as discover new ones to take on! People love grouping things into lists &#8211; it&#8217;s a natural human tendency: The Four-thousand Foot Mountains of New Hampshire, California Micro-brews, Best Restaurants in Austin, TX. We want to motivate people to take on these challenges, to get out and do something. Udunit will bring social and gaming aspects to these accomplishment lists, building on people’s desire to share their accomplishments as well as their competitive natures.</p>

<p>Based on Foursquare&#8217;s <a href="http://engineering.foursquare.com">engineering blog</a> (which has lots of good technical information about how they do things) we decided to give <a href="http://liftweb.net">Lift</a> a try and learn <a href="http://www.scala-lang.org">Scala</a> along the way!  Did we like it?  Yes and no. I am intellectually attracted to functional programming and enjoyed Scala in that regard. However, the type system gave us some headaches (seems to be a common comment), and we found that in general there was a tendency in the community toward less than readable code. Lift&#8217;s documentation left a lot to be desired and was often behind the current &#8220;best&#8221; way of doing things.</p>

<p>It was fun+frustrating to play with and our next project won&#8217;t be using Lift/Scala,   but I&#8217;ve been playing with <a href="http://www.opalang.com">Opa</a> and am excited to try that for a project!</p>

<p>Feel free to check out <a href="http://udunnit-frontend-dev.herokuapp.com">UdunIt</a> and use it!  The basic funcionality is there, and I&#8217;ll leave it up in case it suddenly starts getting popular. :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chessInvaders]]></title>
    <link href="http://timofei7.github.com/blog/2011/12/15/chessinvaders/"/>
    <updated>2011-12-15T01:40:00-05:00</updated>
    <id>http://timofei7.github.com/blog/2011/12/15/chessinvaders</id>
    <content type="html"><![CDATA[<p>The current project I am working on is an iPad game that teaches basic rules of chess in a fast paced not-quite-chess environment. The game is a small, but fun combination of space invaders and chess.  It teaches and drills the basic movement rules while remaining engaging.</p>

<p>A recentish clip of the 3D environment with touch zoom and pan:</p>

<iframe id="3denv" width="640" height="480" src="http://www.youtube.com/embed/QnLySqbE1is?rel=0" frameborder="0" allowfullscreen></iframe>




<!--MORE-->


<p>Here are some more clips:</p>

<p>This is a clip of some gameplay!</p>

<iframe id="gameplay" width="640" height="480" src="http://www.youtube.com/embed/WUUwGmBc7w8?rel=0" frameborder="0" allowfullscreen></iframe>


<hr />

<p>And this is an intro sequence test, most of this will change, but the pink screen UI I think is here to stay!</p>

<iframe id="introtest" width="640" height="480" src="http://www.youtube.com/embed/MgGpyQhdSkQ?rel=0" frameborder="0" allowfullscreen></iframe>


<hr />

<p>Here are some simple 2D graphicsI designed for a pseudo 2D mode where the animals are billboarded to face the camera. This is a bit cuter and better for kids than the current static 3D models. Ideally the pieces will be 3D and animated but for now this will be the cute mode.</p>

<div id="animalsgalleria"></div>


<script type="text/javascript">
jQuery('#animalsgalleria').galleria({
debug: false,
_toggleInfo: false,
width: 400,
picasa: 'useralbum:timofei/2DChessGraphics',
picasaOptions: {
        description: true,
}
});
</script>


<hr />

<h2>more coming soon</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D Mesh Sculpting using the Kinect]]></title>
    <link href="http://timofei7.github.com/blog/2011/04/27/kinectsculpt/"/>
    <updated>2011-04-27T01:40:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2011/04/27/kinectsculpt</id>
    <content type="html"><![CDATA[<iframe id="kinectscuplt" width="853" height="480" src="http://www.youtube.com/embed/4tIXcKJwe8M?rel=0&amp;hd=1" frameborder="0" allowfullscreen></iframe>


<p>(Tim Tregubov, CS80 Spring 2011)</p>

<p>I had wanted to play/hack a Kinect so I completed an independent study project researching  motion detection techniques, physics reconstruction, and geometry sculpting. I implemented a program to sculpt some 3D geometry with your hands using the Kinect.</p>

<!--more-->


<p>Originally the goal was simple: do some Kinect programming.  It then morphed into what was going to become a physics based game in which you have to define physical properties of objects using intuitive physics based gestures.  For instance to define the bounciness of an object you would set the coefficient of restitution by showing the dropped-from height and the first bounce-up-to height using your hands &#8211; simple yet also correct. For friction you could indicate the angle of incline necessary to break static friction with you arms.  Other properties were harder to do intuitively.  One idea was a constant force model in which a progress bar would indicate some total possible energy available to expend and a user would, for instance, mime lifting an object and the progress bar (on a simple timer) would indicate how much force they need to lift the object (mass in relation to earths gravity), the longer (per distance) it took, the more mass the object had.  This was starting to become less intuitive.</p>

<p>The final physical property was shape, and with that came the idea of exploring mesh deformation using the Kinect.  So the final project after much paper reading became simply to implement some of that.  I had never done any motion programming or any image recognition so playing with this was interesting.  After coming up with a fairly uninteresting demo of the coefficient of restitution, I focused on mesh manipulation.</p>

<p>Mesh manipulation (such as in 3D sculpting tools like Mudbox) turned out to be difficult problem to do well.  The geometry tended to get pretty ugly after too much vertex displacement without resorting to lots of tricks to keep the triangles average sized and regular shaped and without subdividing them when they get too stretched out (what you see in the demo is pretty simple: a laplacian smoothing is applied periodically to keep vertices from getting too crazy)</p>

<p>I also wanted to be able to push and pull so I learned a bit of image processing to recognize open vs closed hands.  Open hand pushes the vertices away while closed pulls them toward you.  The pixels of the hand are extracted based on the depth map and hand point from the Kinect and then using the number of convexity defects in the contour to determine whether it is open or closed.</p>

<p>Skills:</p>

<ul>
<li>Unity3D</li>
<li>C#</li>
<li>OpenNI (for skeletal mocap and gestures)</li>
<li>OpenCV (for hand image processing)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[a paper: The Neural Mechanisms and Purposes of Randomness in Consciousness]]></title>
    <link href="http://timofei7.github.com/blog/2010/06/08/a-paper-the-neural-mechanisms-and-purposes-of-randomness-in-consciousness/"/>
    <updated>2010-06-08T01:21:36-04:00</updated>
    <id>http://timofei7.github.com/blog/2010/06/08/a-paper-the-neural-mechanisms-and-purposes-of-randomness-in-consciousness</id>
    <content type="html"><![CDATA[<p>Do you believe in free will or determinism?   Either way,  imagine you are
creating a life form, and that you want it to have free will.  You figure out
that you need to design an organ that would be responsible for this.  You
decide to call it the &#8220;free willer&#8221;.</p>

<p>What would this organ do? You realize that it must make decisions, as that is
what &#8220;will&#8221; allows you to do.  But how will it do so?  You realize that
learning is involved &#8211; that this organ needs to take into consideration past
events. Oops, you have just created the deterministic willer!</p>

<p>Ok ok, let&#8217;s back up a minute.  If we don&#8217;t take into consideration past
events&#8230; well then the decisions it would make would have to be random.  Is
that what we want? Not really, random decisions won&#8217;t get this new life form
very far!</p>

<p>What other decision mechanisms could we come up with for this organ?  Well it
could be influenced by some predetermined set of rules or genes that get
better over time, but that&#8217;s just another determinism!</p>

<p>Ideally what we want is something that is influenced by past events
(learning). Something that can improve its programming over generations
(genes). And finally something that can decide to do OTHER than its
deterministic inputs dictate (the free part).</p>

<p>Turns out that the brain marries randomness with learning and genes in a
perfect way to achieve just this!  We already have an organ that will
purposefully introduce randomness into our thinking process so that we can
come up with unique solutions and choices that are not predetermined by the
universe or by our genes and past experiences (at least not exclusively).</p>

<p>Here&#8217;s a paper I wrote about this that goes into this in more detail.  The
brain is sooo cool.</p>

<!--more-->


<p><strong>AI Randomness </strong><br/>
The field of computer artificial intelligence often finds algorithms that use
randomness extremely useful. Simulated annealing, genetic algorithms, random
walk, stochastic algorithms and neural networks, cryptography, random
constraint satisfaction, and even the common quicksort all employ randomness
to some degree or another (Russel, S. J., Norvig, P., 2003). Randomness is
often used to get an algorithm unstuck or to allow an algorithm to find an
approximate solution much quicker than it would take to find an optimal one
(finding the optimal solution in large state spaces is very often simply not
computationally feasible).</p>

<p>For instance, in simulated annealing a local search algorithm will randomly
choose among nearby solutions in an effort to prevent getting stuck at a local
optimum (ibid., pg 120). A local search algorithm is an algorithm that changes
the current state (or states) based on information it knows about surrounding
states rather than exhaustively searching down paths from a start state. A
simple example of this is the hill climbing algorithm (ibid., pg.122). The
algorithm simply examines positions in the search space adjacent to it&#8217;s
current position and picks the better one. When nothing adjacent is better it
stops. However, stopping at this point does not necessarily imply the best
solution: this might be the top of a small hill that is next to a big
mountain. To make this algorithm not get stuck at local maxima, whenever it
gets to the top (since we are talking about climbing), instead of claiming
victory it should attempt a random jump to another location, but remember the
last highest peak. This way after some number of maximum random jumps the
algorithm will either find the global optimal or the best it could find in the
given time. The physics annealing analog is repeatedly heating a metal (to
progressively less high temperatures) and allowing to cool in between cycles
to align the crystalline structure into continually smaller-finer crystals.
Thus instead of simply randomly jumping the algorithm could assign a lowering
probability for each step as it jumps to avoid jumping too far as it narrows
in on the actual optimum (ibid., pg 124).</p>

<p>Genetic algorithms (and stochastic beam search on which they are based) can be
explained in terms of evolution. In stochastic beam search a greedy local
search such as hillclimbing is run some n number of times in parallel. At each
step, n of the best possible successors are chosen at random with a decreasing
probability assigned to each given its value (provided by some heuristic value
function) and the current time step. The biological analogy to this is natural
selection. Each successor state is an offspring of a parent state organism and
the successors are selected based on their fitness. Genetic algorithms take
this a step further by combining two parent states analogously to sexual
reproduction. They are similar to stochastic beam search except with the
addition of a few steps that deal with crossing the &#8216;genes&#8217; of the parent
states. States are usually stored as sequences of characters or numbers and
after being crossed are also randomly mutated.</p>

<p>These are just a few examples of randomness in AI computing. These are fairly
simple examples however, a larger problem for AI is what to do when the world
is complex and uncertain. Simulated annealing and stochastic beam search are
part of the Monte Carlo family of algorithms that use randomness to help deal
with uncertainty in large numbers of inputs. Any large scale modeling with
uncertain inputs requires probabilistic reasoning which often requires
randomness to deal with any sort of large connected network (ibid., 530).</p>

<p>In these algorithms, randomness plays a part, however the other essential part
is probability. Without probabilistic reasoning, no complex modeling, learning
or planning given uncertain inputs could be possible (ibid., 480). Bayesian
networks are perhaps the most famous of probabilistic tools used to compute
the probabilities of unknown variables using networks of connected
probabilities. At the neuronal level in the physical brain probability plays a
big role. The research areas most clearly connecting AI to the human brain are
artificial neural networks.</p>

<p>Artificial neural networks can have a fairly simple mathematical model. A
neural network is composed of units connected to each other. Each connection
has a weight which not only carries the &#8216;strength&#8217; of the connection but also
whether it is excitatory or inhibitory (the numerical weight is signed). Each
node has inputs (which are summed), an activation function (either a hard
threshold or a sigmoid) and output links to other nodes (ibid., 728). After
training, an artificial neural network can not only encode complex boolean
operations but also can function as short term memory (if connected as a
recurrent network with reafferent loops). The significance of this model is
that although it is quite simplified, it shows a probabilistic network
analogous to the neural network of the cortex.</p>

<p><strong>Probabilistic Neurons</strong><br/>
Since the brain&#8217;s neuronal circuitry is the basis for artificial neural
networks, there are clear parallels even though the actual system is much more
complicated than the computational model. The weights can be conveyed not only
by width of the synaptic gap (usually around one forty-thousandth of a
millimeter (Penrose, R., 1989)) but more importantly by the timing of the
axonal pulses (Freeman, W. J., 2000, pg. 41). The presynaptic electrical
axonal pulse has a constant current height and so the strength of the signal
is conveyed by the rate of the pulses. The dendrite of the postsynaptic neuron
(via the action of neurotransmitters in the synaptic cleft) integrates these
pulses into a amplitude modulated wave input for the postsynaptic neuron. The
various currents from the dendrites on the postsynaptic neuron are summed up
in the trigger zone near the nucleus of the neuron. That current is what
triggers the neuron and is capable of being measured as potential in an
electroencephalogram (EEG) (ibid., pg. 42). If the current reaches the action
potential then the neuron will trigger it&#8217;s own axonal pulses. The axonal
pulses take some time to travel but there is no attenuation of the signal &#8211;
this is essential to be able to transmit values over long distances without
losing energy. Dendrite current modulation is different &#8211; it is able to
integrate with currents from other dendrites in the cell body current loop.
This enables the summing of potentials (ibid., pg. 46). One thing to note
about the pulse-width conversion (ibid, pg. 46) is that it is not stepped or
linear but rather sigmoid (leaning s) shaped. Slow at low and high activation
but increasing linearly in the middle. By this action the neuron reacts
differently to incoming pulses given its current state.</p>

<p>Some neurons have leaky terminal membranes allowing a slow change in potential
(Burns, B.D, 1968, pg. 23) . This causes them to fire at random intervals.
Taken alone this periodic random firing does not amount to much, however given
the density of neuronal connections, it is useful to also consider the action
of groups of neurons rather than single individuals. A noticeable group effect
that occurs is subthreshold oscillation. For each neuron to stay alive it
needs to periodically activate (Freeman, W. J., 2000, pg. 41). There appear to
be synchronization waves that result in periodic rises in subthreshold
membrane neuron potential. These result from a collective pattern of recurrent
excitation and inhibition from interneurons (shorter local reach neurons
(ibid., pg 39) (Buzsaki, G., 2006). Not every neuron fires every time but
collectively there is an oscillation pattern. This oscillation constrains the
times during which neurons may fire and thus produces a synchronizing effect
(Buzsaki, G., 2006, pg. 76). Neuronal firing often needs to be synchronized to
produce the desired effect &#8211; if two neurons fire and if, because of the
oscillation, the probability that they will fire simultaneously is increased,
they are more likely to push a third neuron over it&#8217;s activation threshold. If
the neural process is widely distributed and complex then the synchronicity
becomes even more important in it&#8217;s constraint of timing differences because
of distance (ibid., pg. 115). There are several different oscillation
frequencies ranging from multiple seconds to 600hz. Since they temporally
constrain neural firing the different frequencies have different
purposes/ranges. Fast oscillation is more appropriate for local, small
distance neural patterns whereas slower clock speeds allow neurons further
apart to cooperate. Additionally the oscillations are not constant, they are
perpetually attracting and repelling each other as they do not have any stable
phase relationship. Thus, they interfere with each other, but that chaos and
fluctuation may be a necessary part of the temporal organization of the brain
as a whole. All of this oscillation can be seen as noise, not only because the
neurons are firing without any external stimuli but also because the
relationship between all the different oscillation frequencies is <em>e</em> (2.71),
the natural logarithm &#8211; this results in a chaotic pattern that appears like
&#8220;pink&#8221; noise on an EEG (ibid., pg. 113). &#8220;Pink&#8221; noise is also known as complex
noise &#8211; this is because its power ratio is 1/<em>f</em>, meaning that the amplitude
of the waves decreases as the frequency increases. Although to a physicist
this would simply suggest that it is a noisy system, what appears as noise is
also a chaotic yet functional synchronizer and organizer of neuron systems
(ibid., 119). The same neurons participate in multiple rhythms, and the
oscillating groups can change and influence each other.</p>

<blockquote><p>The brain not only gives rise to large-scale, long-term patterns, but these
self-organized collective patterns also govern the behavior of its constituent
neurons. The firing patterns of single cells depend not only on their
instantaneous external inputs but also on the history of their firing patterns
and the state of the network into which they are embedded (Buzsaki, G., 2006,
pg 122).</p></blockquote>

<p>However, these collective patterns are transient, they fluctuate around
different brain areas, organizing temporal information where needed on
specific time-scales depending on how large of a neuronal pattern is needed.
&#8220;Transient order emerges from halfway between order and disorder from the
territory of complexity&#8221; (ibid., pg 135).</p>

<p>It turns out that the power ratio of the pink noise also happens to fit the
data for other time-related brain tasks: forgetting, habituation, music and
speech. The brain is not competing with its own noise, it is in essence
harnessing the noise as multiple dynamic timing devices synchronizing
particular groups of neurons for specific tasks at specific clock rates.
Indeed because of this very action, and the fact that neurons are strongly
interconnected (some pyramidal cells can have thousands of dendrite
connections sites (Buzsaki, G., 2006, pg. 32)), even small local perturbations
can become amplified and spread throughout the network.</p>

<p>This amplification is of great importance. Consider a neuron that is almost
ready to fire, but does not quite have enough current to reach it&#8217;s action
potential. A noise input could cause it to fire when it otherwise would not
have. Because the noise is stochastic, the neuron&#8217;s firing is not
deterministic. It may or may not fire depending on the noise in the system
around it. Small weak local signals can become noticeable when the noise bumps
it up. Additionally small periodic signals can act as attractors to the noise
oscillation and can in effect draw attention to themselves by pulling the
oscillation frequency toward their own.</p>

<p>Given these mechanisms it is evident that neuronal firing is probabilistic.
Even sensory neurons such as the ganglion cells in the retina have been shown
to have unpredictable responses (Burns, B.D, 1968, pg 28). This behavior is of
interest because it allows for a break with deterministic, simple input-output
machine operation and allows a greater uncertainty to exist.</p>

<p><strong>Brownian Motion</strong><br/>
Another source of uncertainty in the brain could be brownian motion. Brownian
motion is the basis for brownian noise. Brownian noise is also called random
walk noise and has a power density ratio of 1/<em>f</em> 2 (Buzsaki, G., 2006, pg.
121). It gets its name from brownian motion. Brownian motion was originally
discovered by Robert Brown, a biologist, who noticed that particles of pollen
on the surface of water will move around erratically (Nelson, E., 1967, pg.
11). The concept was later further worked on by Einstein who in part used it
to prove the existence of atoms. The basic idea is that a larger particle
surrounded by a myriad of smaller particles suspended in a liquid or gas that
all have their own movement will be pushed around by the motion of the smaller
particles in a random fashion. Brownian motion over longer periods/distances
is random, but can be predicted at short intervals by the average velocity and
density of the molecules in the suspension (Buzsaki, G., 2006, pg. 121). It
has been shown that brownian motion applies to all biological systems, &#8220;as a
result of thermal agitation processes, molecules are constantly on the move,
colliding with each other and bouncing back and forth&#8221; (Marguet, D., Lenne,
PF., Rigneault, H., He, HT., 2006, pg. 288). On a macroscopic level however
brownian motion is a diffusion process.</p>

<blockquote><p>Diffusion processes have the following main features:  (1) the diffusion
rates are temperature-depen- dent, (2) as collisions with other molecules slow
down diffusion processes, the higher the molecular density of a medium is, the
lower the diffusion rate will be and most importantly, (3) as the random
forces generated by collisions have no preferred direction, diffusion will
cause a tendency towards homogeneity. (ibid., pg. 288)</p></blockquote>

<p>Marguet et al suggest that any variability in activation of the postsynaptic
neuron would be due purely to &#8221;stochastic variations in basic presynaptic
elements, such as the vesicle volume, the vesicle docking position, and the
vesicle neurotransmitter concentration&#8221; (ibid., pg. 298) rather than any
variability due to brownian motion. So although brownian motion is used as a
diffusion process and is certainly harnessed by the brain to effect homogenous
dispersal of neurotransmitters in the synaptic cleft, it is not responsible
directly for any variability in actual neuronal firing.</p>

<p><strong>Quantum Theories</strong><br/>
There are many theories involving consciousness and quantum theory. The
problems with these theories is that the brain is too hot to be susceptible to
any currently known quantum effects. There is too much classical noise and
complexity for a single quanta to have any effect at all. A single cell in the
retina may react to a single photon (which would be a quantum event) however
our brains need at least seven neurons to react to actually perceive it
(Penrose, R, 1989, pg. 516). Additionally, most neurons in the brain require
many neurotransmitters to trigger many sodium or chloride channels to open
which in turn could trigger the neuron to fire. This would require too many
quanta to be useful. However, theories abound of either undiscovered cells
that respond to single quanta or computational complexity that can only be
solved by quantum computation. Additionally there are dualist theories that a
mental energy influences the physical brain through quantum effects. These
theories attempt to escape from determinism and provide a explanation why free
will is non-determined. Christoff Koch (2006) provides an eloquent rebuttal of
quantum theories, for now at least:</p>

<blockquote><p>The content of consciousness is rich and highly differentiated. It is
associated with the firing activity of a very large number of neurons spread
all over the cortex and associated satellites, such as the thalamus. Thus, any
one conscious percept or thought must be expressed in a wide- flung coalition
of neurons firing together. Even if quantum gates exist within the confines of
neurons, it remains totally nebulous how information of relevance to the
organism would get to these quantum gates. Moreover, how would it be kept
coherent across the milli- and centimeters separating individual neurons when
synaptic and spiking processes, the primary means of neuronal communication
on the perceptual timescale, destroy quantum information?</p></blockquote>

<p>It is far more likely that the material basis of consciousness can be
understood within a purely neurobiological framework, without invoking any
quantum-mechanical deus ex machina. (Koch, C., 2006).</p>

<p><strong>Consciousness</strong><br/>
How do these various theories relate to consciousness? Randomness can be, at
least partially, an escape from determinism. If every neuron firing were
physically determined then there is no way that we as as &#8216;free agent&#8217; could
have chosen differently from how we did choose. This breaks a mandate of &#8216;free
will&#8217;: we are free to have chosen differently from how we did choose. However,
going too far toward randomness would break the other mandate of &#8216;free will&#8217;:
our actions belong to us and reflect who we are (and that our actions are not
simply random). A middle ground would surprisingly satisfy both of these
criteria and allow a free will that is both based on our past experiences but
is not tied down to them deterministically. If the system is probabilistic,
then at any point we can say both, &#8220;I could have done differently,&#8221; and &#8220;I
chose that way based on my past experiences, based on who I am.&#8221; At least
semantically this fulfills the requirements of free will. Additionally, it is
hard to imagine what third rule would invalidate this solution and would at
the same time define the concept of free will in such a way as to keep the
common intuition of what it is. Wegner in &#8220;The Illusion of Conscious Will&#8221;
poses a thought experiment of inventing a Free Willer &#8211; an organ that makes
free will choices. Such an instrument cannot ignore past experiences as that
would be meaningless, and it cannot be purely random as that is equally
meaningless. How do the various sources and types of randomness affect the
free will problem?</p>

<p>AI randomness is an example of how randomness is useful purely
computationally. AI algorithms attempt, at least in part, to make sense of a
complex uncertain world and to make internal models of it and for this they
need randomness. This does not imply that the human brain requires randomness
in the same way however.</p>

<p>The probabilistic nature of neuronal firing and the noise of oscillation
appears very promising however. Not only is a neuron not guaranteed to fire
when presented with some stimuli, but it may also fire randomly when presented
with stimuli that should be too weak. This creates an instability in the
system allowing alternative solutions and unpredictable effects. Rodolfo
Llinas (2003) goes even further to claim that conscious experience is created
by the temporal organization provided by oscillatory synchronization.</p>

<p>Quantum effects could provide a very interesting source of uncertainty in the
brain, but unfortunately there is no current reason to think that that it
does.</p>

<p><strong>Conclusions</strong><br/>
It appears from this summary of some of the primary randomness theories that
indeed there are some sources of randomness in the brain. However, not all of
these sources are useful for a discussion of consciousness. For instance, no
solid proof exists for quantum effects in the brain. Brownian motion in the
synapse is useful for diffusion but not specifically for volition or free
will. However oscillation and pink noise provide an interesting systemic
effect that should not be overlooked. If this noise is truly stochastic and
unpredictable enough it provides a middle ground between the two opposites of
randomness and determinism and allow us to feel that our decisions are our
own.</p>

<hr />

<p><strong>References:</strong> Burns, B. D. (1968). The uncertain nervous system. London: Arnold.<br/>
Buzsáki, G. (2006). Rhythms of the brain. Oxford; New York: Oxford University
Press.</p>

<p>Freeman, A., Libet, B., &amp; Sutherland, K. (1999). The volitional brain :Towards
a neuroscience of free will. Thorverton: Imprint Academic.</p>

<p>Freeman, W. J. (2000; 1999). How brains make up their minds. New York:
Columbia University Press.</p>

<p>Hutcheon, B., &amp; Yarom, Y. (2000). Resonance, oscillation and the intrinsic
frequency preferences of neurons. Trends in Neurosciences, 23(5), 216-222.
doi:DOI: 10.1016/S0166-2236(00)01547-2</p>

<p>Koch, C., &amp; Hepp, K. (2006). Quantum mechanics in the brain. Nature,
440(7084), 611-611. Retrieved from http://dx.doi.org/10.1038/440611a</p>

<p>Llinás, R. (2003). Consciousness and the thalamocortical loop. International
Congress Series, 1250, 409-416. doi:DOI: 10.1016/S0531-5131(03)01067-7</p>

<p>Marguet, D., Lenne, P., Rigneault, H., &amp; He, H. (2006). Dynamics in the plasma
membrane: How to combine fluidity and order. The EMBO Journal, 25(15),
3446-3457. Retrieved fromhttp://dx.doi.org/10.1038/sj.emboj.7601204</p>

<p>Nelson, E. (1967). Dynamical theories of brownian motion. Princeton, N.J.:
Princeton University Press.</p>

<p>Osaka, N. (2003). Neural basis of consciousness. Philadelphia, PA: John
Benjamins Pub.</p>

<p>Penrose, R. (1989). The emperor&#8217;s new mind :Concerning computers, minds, and
the laws of physics. Oxford; New York: Oxford University Press.</p>

<p>Russell, S. J., &amp; Norvig, P. (2003). Artificial intelligence :A modern
approach (2nd ed.). Upper Saddle River, N.J.: Prentice Hall/Pearson Education.</p>

<p>Ventriglia, F., &amp; Di Maio, V. (2002). Stochastic fluctuations of the synaptic
function. Biosystems, 67(1-3), 287-294. doi:DOI: 10.1016/S0303-2647(02)00086-2</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ENGS21: Gunkless Drain]]></title>
    <link href="http://timofei7.github.com/blog/2010/06/02/engs21/"/>
    <updated>2010-06-02T01:43:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2010/06/02/engs21</id>
    <content type="html"><![CDATA[<iframe id="engs21" width="640" height="480" src="http://www.youtube.com/embed/Wk0fobSn1PY?rel=0&amp;hd=1" frameborder="0" allowfullscreen></iframe>


<p>(Gunkless SolidWorks Design: Tim Tregubov,  Spring 2010)</p>

<p>For the &#8220;flagship&#8221; engineering class my group, Divya Gunasekaran, Elizabeth Klinger, Alannah Linkhorn, Pavel Sotskov, and myself, designed and built a self-cleaning drain. It was a small device that would retrofit in your shower drain and was foot powered to help clear clogged drains.  By the end of the course we had a working, tested prototype.</p>

<!--more-->


<h2>Working Prototype</h2>

<iframe id="engs21_2" width="640" height="480" src="http://www.youtube.com/embed/EyW0I3QAJUw?rel=0" frameborder="0" allowfullscreen></iframe>


<p>My goals for the class on the outset were: to learn some machining and SolidWorks &#8212; basically an engineering experience outside of electronics and computer engineering.  That happened, along with some fun design stuff and a lot of report writing and gantt charting.</p>

<p>My contributions to the project were:</p>

<ul>
<li>SolidWorks design</li>
<li>rapid prototyping (Object Eden)</li>
<li>some lathe and milling machining work</li>
</ul>


<p>Here is our <a href="https://s3.amazonaws.com/timofei7portfolio/ENGS21/ENGS21finalpresentation.pdf">final presentation</a></p>

<h3>Some of my initial brainstorming sketches:</h3>

<p><img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/Slide1.jpg" alt="" />
<img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/testdev.jpg" alt="" /></p>

<h3>Annotated SolidWorks concept:</h3>

<p><img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/colored2.png" alt="" /></p>

<h3>SolidWorks Templates for milling:</h3>

<p><img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/Scan10001.JPG" alt="" />
<img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/Scan10002.JPG" alt="" /></p>

<h3>Rapid prototype pieces:</h3>

<p><img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/IMG_3115.jpg" alt="" /></p>

<h3>The final machined prototype:</h3>

<p><img src="https://s3.amazonaws.com/timofei7portfolio/ENGS21/IMG_3119.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[why the DLPFC is the coolest part of the brain]]></title>
    <link href="http://timofei7.github.com/blog/2010/04/30/why-the-dlpfc-is-the-coolest-part-of-the-brain/"/>
    <updated>2010-04-30T01:33:47-04:00</updated>
    <id>http://timofei7.github.com/blog/2010/04/30/why-the-dlpfc-is-the-coolest-part-of-the-brain</id>
    <content type="html"><![CDATA[<p>want to learn about why the dorsolateral prefrontal cortex is the coolest part
of the brain?</p>

<!--more-->


<p><strong>The DLPFC</strong><br/>
With the onset of modern neuroscience a common question often discussed is:
where in the brain are self-regulation, executive control, free will,
volition, selection, short-term memory, attention, planning, and overall
consciousness located and by what neurological processes do they occur. The
prime brain areas that is thought to be responsible are the frontal lobes.
However a problem is presented when studying this area in humans: comparison
to monkey&#8217;s brains has been difficult as the PFC, prefrontal cortex, is
structured somewhat differently (Petrides, M., Pandya, D.N., 1999 and Fuster,
J. M., 2008. pg. 21) and thus comparisons can be complicated, and invasive
techniques are largely limited to non-humans. Lesion studies have sometimes
led to seemingly contradicting results that are hotly debated. However
researchers agree that the prefrontal cortex as a whole is the essential area
responsible for higher behavioral functions. One of the essential brain areas
associated with these psychological processes is the DLPFC, dorsolateral
prefrontal cortex. This area appears to be critical for working memory,
planning, selective attention, temporal integration and volition.</p>

<p><strong>Location and Structure</strong><br/>
The DLPFC is located in the middle frontal gyrus and is typically defined
cytoarchitectonicaly as Brodmann areas 46 and 9 (Berntson, G. G., &amp; Cacioppo,
J. T., 2009, pg. 586). BA8 is also sometimes considered the posterior DLPFC or
simply adjacent to it (Miller, Earl K., Cohen, Jonathan D., 2001, pg. 169).
The DLPFC is one of the last areas in humans to develop and myelinate as the
brain myelinates back to front (Fuster, J. M., 2008. pg. 15).</p>

<p>C<strong>onnections</strong></p>

<p>A critical aspect of the DLPFC is that it is extraordinarily interconnected
with other brain areas and is the most connected of all the PFC areas. It is
connected to sensory and motor cortexes as well as interconnected with other
PFC areas.</p>

<p><strong>Sensory Cortex Connections</strong><br/>
BA46 and BA9 have connections to the visual, somatosensory and auditory
projections via the occipital, parietal and temporal cortices. Both areas are
also connected to the multimodal rostral superior temporal sulcus with neurons
responding to multi-sensory inputs. (Miller, Earl K., Cohen, Jonathan D.,
2001). The posterior parietal cortex in particular plays a large role in that
it is both a mutli-modal area and is related to spatial working memory,
attention. It has also been implicated in having a role in intention (Libet et
al, 1999).</p>

<p><strong>Motor Cortex Connections</strong><br/>
BA46 is particularly connected to pre-motor areas; it has connections to the
SMA, the pSMA, the rostral cingulate, the lateral frontal pre-motor cortex and
to the cerebellum and superior colliculus ( Miller, E. K., Cohen, J. D., 2001.
pg. 175). BA46 also sends projections to the BA8 frontal eye fields and
indirectly receives inputs, along with the all of the prefrontal cortex, from
the basal ganglia (pg. 175).</p>

<p><strong>Prefrontal Interconnections</strong><br/>
All of the prefrontal areas are interconnected to a large degree. BA46 and BA9
are both connected to the orbital and medial prefrontal areas (BA 10,
11,13,14) as well as to each other. BA9 is connected to the ventrolateral
areas (BA 12,45). BA8 connects to BA46. These interconnections not only allow
indirect communication to other systems that are connected to other prefrontal
areas (such as the limbic system through the medial PFC areas), but also
provides a way for disperse systems to be indirectly wired together through
this central area. The convergence of cortico-cortical pathways suggests that
part of the DLPFC&#8217;s operation is as a cross-modal area of association (Fuster,
J. M., 2008. pg. 34).</p>

<p><strong>Experimental Connections</strong><br/>
An experiment that supports this prefrontal interconnectedness theory (Tomita
et al, 2001) studied top-down communication from the prefrontal cortex to the
inferior temporal cortex (which has been shown to store long-term visual
memories (Miyashita, Y., 1993)). The inferior temporal cortex receives visual
input contra-laterally from the occipital lobe and the two sides are sub-
cortically connected. In this experiment two monkeys were given split visual
stimuli and were trained to associate certain cues with categories of stimuli.
Then the connection between the inferior temporal cortices was severed &#8211; to
theoretically prevent a cue presented to the ipsilateral side (the side that
did not see the choice) from activating a category recall on the contralateral
side. The bottom-up condition was when both the cue and the choice were
offered to the same contralateral vision field, and the top-down condition was
when the cue was offered on the ipsilateral side while the choice was offered
on the contralateral side. The results, measured via single neuron recordings,
showed that when the direct connection between the sides of the inferior
temporal lobe was severed there was a delay in recall but that the ipsilateral
side never-the-less showed correct activation. This experiment suggests that
the visual information travelled through the prefrontal cortex connections. To
confirm this finding the connections to the prefrontal cortex from the
inferior temporal cortex lobes were severed and only then did the monkeys fail
the task.</p>

<p><strong>Functionality</strong><br/>
Given the strong interconnectedness of all the prefrontal areas, it is no
surprise that a compartmentalization of each cytoarchitectonic area would be
an oversimplification (Fuster, J. M., 2008. pg. 6). All these areas work
together to achieve its various executive functions. However, these areas do
have discernable specializations and the dorsolateral prefrontal cortex in
particular has a number of fortes including basic working memory, cross-
temporal/modal integration, temporal ordering, planning, acting and rule
encoding, selective attention, will and volition.</p>

<p><strong>Working Memory</strong><br/>
It is commonly agreed that the lateral prefrontal cortex plays a large role in
working memory (Curtis, C. E, D&#8217;Esposito, M., 2004). However, precisely how it
works and what role the DLPFC plays in it is disputed. Special types of
neurons called memory neurons are certainly necessary if not sufficient.
Memory neurons are neurons that in a delay task appear to activate during the
delay period between a presentation and a recall of a stimuli. Some activate
during the stimulus, others right after, and even others stay active for a
while. The DLPFC has more memory neurons than any other prefrontal area
(Fuster, J. M., 2008. pg. 247). As a side note, the Frontal Eye Fields &#8211; area
8 &#8211; contains memory cells that are particularly attuned for eye saccades to
cued locations, whereas in areas 46 and 9 there is some evidence for memory
neuron specialization toward spatial tasks. There are however memory neurons
in many other areas of the brain, including the thalamus, inferotemporal
cortex and basal ganglia, but those memory neurons appear to be specialized
toward the sensory task of the particular area, whereas in the prefrontal
cortex the memory neurons are more multi-modal. The simple existence of memory
neurons is not enough to show the DLPFC&#8217;s role in working memory.</p>

<p>Working memory as a function of the DLPFC has been primarily shown via delay
tasks with either lesion patients or appropriately trained animals with
ablations/lesions or reversible lesions via cooling. Commonly a delay task
will begin with the representation of a cue. The cue informs the participant
about a choice that is to be made later (usually the location of a salient
item such as food). Then the cue is covered up for some amount of time: the
delay period. Following this a choice is presented &#8211; the correct choice being
informed by the cue presented prior to the delay. In many studies of animals,
when the delay is non-existent or very short, the DLPFC lesioned animals
perform normally, but as the delay increases so success at the task drops
(Fuster, J. M., 2008. pg. 144). Similar tasks however that do not have any
spatial element have shown no difference in some experiments.</p>

<p>These lesion studies lead to the theory that the DLPFC is particularly
important for spatial working memory. However there remain questions as to
what role the DLPFC plays in working memory. The interconnectedness of the
DLPFC plays a vital role in its working memory functionality. A study of the
interaction of the DLPFC and other brain areas (Fuster, J. M., Bauer, R. H., &amp;
Jervey, J. P., 1985) shows working memory to be more than a few memory neurons
but a distributed representational network encompassing many brain areas. In
particular it reveals the DLPFC as a top-down moderator of &#8220;online&#8221; working
memory tasks. The study used a Peltier chip to cool down the DLPFC and the
inferotemporal cortex in turn. Single neuron recording was used to record the
activity of memory neurons sensitive to certain colors in the inferotemporal
cortex. The monkeys were trained in a color match delay task. As they
performed the task the color sensitive neurons in the inferotemporal cortex
would activate on the working memory of the cue color. However, when the DLPFC
was cooled the firing rate of the inferotemporal neurons related to the
working memory of the task would attenuate and the animal, additionally, would
not be able to perform the task. This suggests a modulation effect from the
DLPFC to the inferotemporal cortex, where the sensory memory for this
particular task was represented, at least in part. This experiment was also
performed in reverse: the inferotemporal cortex cooled and the DLPFC activity
measured during the same delay task. The results were very similar: there was
a modulation effect in addition to lowered task performance. Fuster makes the
supposition that the model for working memory is that of,</p>

<blockquote><p>&#8220;a frontal substrate of executive memory cooperating with other brain
structures, cortical and subcortical, for the maintenance of working memory.
The function of working memory would be distributed, much as its neural
substrate, albeit under a degree of prefrontal executive &#8211; or &#8216;top-down&#8217;
&#8211;control.&#8221; (Fuster, J. M., 2008. pg. 251)</p></blockquote>

<p>Reverberating reentry is the method by which these cortico-cortical/cortico-
subcortical memory loops are maintained neurologically (pg. 252). Projections
to and from posterior sensory cortices and the DLPFC reverberate back and
forth, each moderating and resubmitting the memory back into the loop as
needed. The theory outlined by Fuster (pg. 296) is that the DLPFC is involved
in the selection and maintenance of working memory and that the
representational aspect of any particular memory requires the brain areas
which are specialized to the sensory features of that memory.</p>

<p>There have been many PET and fMRI studies that have localized spatial working
memory to the DLPFC especially in monkeys, however in human studies not only
has it been harder to pinpoint some studies seem to suggest that the DLPF&#8217;s
role is quite more elaborate and involved.</p>

<p><strong>Cross-Temporal Integration</strong><br/>
It has already been demonstrated that the DLPFC has a particular importance in
temporal integration. Simple recognition tasks without a delay do not appear
to trigger the DLPFC. Additionally, as already mentioned, the greater the
delay the more a DLPFC lesion causes impairment. Several studies show DLPFC
lesioned monkeys</p>

<blockquote><p>&#8220;deficient at tasks in which temporal frequency, temporal order, or temporal
sequence is of the essence. [..] The dorsolateral prefrontal cortex seems most
important for the mediation of the cross-temporal contingencies, as delay
tasks require&#8221; (Fuster, J. M., 2008. pg. 145).</p></blockquote>

<p>This is not surprising as working memory is an essential component of
temporally organizing cognition and behavior.</p>

<p><strong>Cross-Modal Integration </strong><br/>
Much of the DLPFC&#8217;s functionality can be attributed to how interconnected it
is. This interconnectedness however not only enables cross-temporal
integration but also cross-modal integration &#8211; neurons that receive
projections from multiple sensory areas are the mechanism behind this.</p>

<p>Fuster demonstrated cross-modal integration with a single neuron recording
study performed on monkeys (Fuster, J. M., 2008. pg. 226). The monkeys were
trained to associate an auditory tone with a particular visual stimuli &#8211; in
this case a color. The experiment first presented the animal with the auditory
cue and then after a delay presented two colors buttons &#8211; the animal would
need to choose the correct one that corresponded with the learned association.
Single cell neurons were recorded in the DLPFC that responded both to the
auditory cue and to the color. Thus the sensory rule for the experimental
condition was encoded in a multi-modal association. This is a precursor to the
rule encoding functionality that the DLPFC is implicated in as well.</p>

<p><strong>Planning, Acting and Rule Encoding</strong><br/>
The DLPFC is essential to the &#8220;ability to maintain any memory, recent or
remote, in the active state for the prospective performance of a goal-directed
act&#8221; (Fuster, J. M., 2008. pg. 146). Performance of a goal directed act
requires planning for the act and acting on in the plan. Related to this is
the ability to encode the rules that may be required for the task. The
beginnings of rule encoding are in the cross-modal associative abilities of
the DLPFC.</p>

<p>A recent study showed that even abstract mathematical rules can be encoded in
the DLPFC (Bongard, S., &amp; Nieder, A., 2010). The monkeys were trained to
distinguish numerosities with greater and less than rules. The stimuli were
varied and so the monkeys were unable to build concrete associative relations
between specific numbers. Using single cell recordings the study found that
there were neurons that fired specifically when a rule-indicating cue appeared
and during the application of that specific rule. The suggestion here is not
that numerosity itself is encoded in the DLPFC rather only the selection of
choosing greater or less than as rules for executive control. Numerosity
itself is a function of the posterior parietal cortex. It is also important to
note that the DLPFC abstracts rules only when the task surpasses some basic
difficulty.</p>

<p>White and Wise in a 1999 study showed that DLPFC neurons were involved in
rules involving both spatial and non-spatial cues with specific eye movements
and hand gestures. As in many of these sorts of studies, using single cell
recording, they found a significant number of neurons that were selective for
changing rules and applying them.</p>

<p>Planning is a task that is commonly associated with the prefrontal cortex in
general, but also with the DLPC in particular. A study by Morris et al in 1993
showed DLPFC activation during the tower of london task. The tower of london
is a task design to test logical planning ability and is similar to the towers
of hanoi puzzle. A common lay association with planning is internal silent
speech. A study by Ryding et al in 1996 showed DLPFC activation during silent
counting but not during counting aloud. The study attributes this activation
to the attentional component of counting internally, although it is not
obvious why there is a difference between the two in terms of attention.
Slightly more modern theories of the DLPFC may attribute this activation to
the selective goal of speaking internally or to the monitoring needs of the
feedback loop given the lack of audible feedback.</p>

<p><strong>Selective Attention and Monitoring</strong><br/>
If the DLPFC helps to maintain goal related working memory, does it also
participate in the selection and attentional aspects related to the goal as
well? An fMRI study by D&#8217;Esposito et al in 1995 seems to indicate that this
may be the case. The experiment consisted of two tasks, a spatial-rotation
task and a semantic-judgement task. When performed singly neither task
required working memory and thus did not show any DLPFC activation. However
when the tasks were to be performed simultaneously (sequentially but rapidly)
the DLPFC showed significant activation.</p>

<p>Hare et al (2009) showed that goal related decisions require DLPFC modulation
of a value signal provided/computed by the VMPFC. DLPFC activity increased in
subjects during successful self-control trails involving choosing healthy over
unhealthy-but-liked food. The experimenters suggest that this result helps
confirm the theory that the DLPFC acts via its connections to other brain
areas to promote goal-oriented behavior.</p>

<p>The DLPFC has also been shown to be activated when a task requires higher
levels of monitoring. The silent counting experiment by Ryding shows this to
some degree. Another set of tasks that shows DLPFC involvement are self-
ordered tasks. In these tasks the subject is shown a set of stimuli and then
is asked self-order them. This requires the subject to keep the memory of
which items have been selected and which have not been selected yet in working
memory and requires them to monitor those memories as they choose objects.
Petrides showed that self-ordered tasks involved DLPFC activation while
externally-ordered tasks did not (2000). Additionally he showed that the more
items were involved in the task the higher the activation regardless of
whether the stimuli were spatial or not. This result seems to indicate that
monitoring is an additional feature of the DLPFC.</p>

<p><strong>Will and Volition</strong><br/>
Given the DLPFC&#8217;s role in so many aspects of &#8220;executive control&#8221; perhaps it
also has a role in the voluntary choice of actions that is so tightly
associated with the concept of consciousness.</p>

<blockquote><p>&#8220;Damage in the dorsolateral prefrontal cortex in humans leads to a lack of
spontaneous activity, distractibility by environmental cues, and the
repetitive, stereotypic use of inappropriate behavioral responses
(perseveration). These phenomena may indicate an inability to choose or
initiate the correct course of action.&#8221; (Freeman, A., Libet, B., &amp; Sutherland,
K., 1999 pg. 16).</p></blockquote>

<p>Frith defines the actual act of such choosing as &#8220;a deliberate selection
[that] is subjectively experienced as willed and occurs when we have a choice
of action. [These] spontaneous or self-generated actions are not specified by
an external trigger stimulus, but are internally driven.&#8221; (Frith et al, 1991).
One of the main findings on volition and the DLPFC is his PET study of word
generation and finger movements.</p>

<p>The word generation experiment consists of 3 conditions: in the first the
subject hears a list of random words and repeats each word. In the second the
subject hears words that have unambiguous opposites and must say out loud the
opposite words. The final third condition the subject hears the word &#8220;next&#8221;
and must choose a word that starts with a preset letter. The idea is that the
first two conditions are &#8220;externally specified&#8221; (Frith et al, 1991); the word
to repeat is unambiguous and no choice exists. In the third condition however
the subject must pick a word. The PET scans showed no difference in rCBF
between the first two &#8220;externally specified&#8221; conditions while the third
condition showed increased left DLPFC rCBF.</p>

<p>The finger movement part of the experiment had similar results (although rCBF
was increased bilaterally in the finger condition). The conditions were
similar: in the first the subject had one of two fingers tapped and they had
to raise that same finger in response, in the second they had to raise the
opposite, and in the third free-willed condition they had to choose which
finger to raise.</p>

<p>One problem with the word generation part of this experiment is that there is
a small working memory component &#8211; that of keeping the already stated
previous word in mind. However, a later study by Desmond et al in 1998,
changed the condition to involve no working memory by simply giving the
participant different word stems that required choice of completions on each
trail. This study had similar results except with fMRI. Further studies by
Libet and Jahanshahi showed that temporal choice about when to make the
movement also activated the DLPFC (Freeman, A., Libet, B., &amp; Sutherland, K.,
1999 pg. 19).</p>

<p>However the DLPFC, as has been previously mentioned, does not act alone in any
of this. In each of these tasks the DLPFC worked with other brain areas by
virtue of its interconnectedness (Freeman, A., Libet, B., &amp; Sutherland, K.,
1999 pg. 20). The conclusion may be that the DLPFC &#8220;plays a role in the
selection of action, [but] the performance of the action itself is facilitated
by &#8216;lower&#8217; motor regions, such as SMA and basal ganglia&#8221; (pg. 21). And
furthermore, the &#8220;DLPFC seems to be involved in keeping possible action in
mind before they are executed, and selecting which one will be performed&#8221; (pg.
27).</p>

<p><strong>Disorders and Lesions</strong><br/>
What role does the DLPFC play in human disorders? Lesions of the DLPFC
contribute to a myriad of symptoms including: lack of drive and awareness
(selective attention suppressed), visuospatial neglect (FEF damage), &#8220;frontal
dynamic aphasia&#8221;: reduced verbal production quality, apathy and &#8220;dysexecutive
syndrome&#8221; leading to being &#8220;incapacitated in initiating spontaneous and
deliberate action&#8221; (Fuster, J. M., 2008. pg. 198). Working memory deficits
contribute to a myriad of failures upstream including in action selection,
temporal integration, and goal oriented planning. The DLPFC is also implicated
in several neurological disorders.</p>

<p><strong>Schizophrenia</strong><br/>
Schizophrenia is commonly marked by such symptoms as poor speech, temporal
integration problems, hallucinations and lack of volitional control. A study
by Weinberger et al in 1986 showed via a PET scan study that there was a lack
of appropriate increase in DLPFC activity in schizophrenia patients while
performing the Wisconsin card sorting task, which has been shown many times to
elicit DLPFC activation. This study was later expanded on in 2002 by Meyer-
Lindenberg et al to not only using PET to study rCBF during the WCST but also
presynaptic dopamine. Their study showed an inverse correlation with reduced
DLPFC activation and increased striatal 6-FD uptake, leading to the conclusion
that dopaminergic transmission dysfunction in schizophrenia may be DLPFC
related. Since schizophrenia is characterized by, &#8220;the failure to construct
logically coherent temporal configurations (gestalts) of thought &#8211; and
consequently of speech and behavior&#8221; (Fuster, J. M., 2008. pg. 313) &#8211; that
precisely implicates the DLPFC in terms of working memory and temporal
integration problems.</p>

<p><strong>Conclusions</strong><br/>
A summary of DLPFC working memory involvement is provided by D&#8217;Esposito et al:</p>

<blockquote><p>When the amount of to-be-remembered information presented at the beginning
of a delayed-response trial approaches or exceeds short-term memory capacity
[&#8230;], dorsolateral PFC is preferentially engaged. Dorsolateral PFC-supported
processes may facilitate the efficient encoding of information. During the
subsequent delay interval, when no information is accessible to the subject,
both ventro- and dorsolateral PFC are recruited. If manipulation of this
information is additionally required during the delay period, dorsolateral PFC
is recruited to an additional extent. Upon the presentation of the probe
stimulus, when a subject is required to make a response based on what was
presented at the beginning of the trial, dorsolateral PFC is again engaged,
presumably as the subject scans the information that was retained across the
trial and chooses an appropriate motor response. [&#8230;] Together, the results
of these studies highlight the temporal dynamics of PFC function during
working memory task performance. (2000)</p></blockquote>

<p>However it is obvious from the DLPFC&#8217;s involvement in selection and planning
and volition that its function cannot be limited to only working memory.
Selective attention is at the most basic level attention to internal
representations. These internal representations are maintained by working
memory and thus these two are closely related. Additionally planning involves
attention to future possibilities, what Ingvar (1985) called &#8220;memory of the
future&#8221;, and is thus also closely related to working memory. It appears that
although there is no cohesive theory for the DLPFC, a general sense could be
that all things DLPFC are related to temporal integration across multiple
sensory modes. The interconnectedness of the DLPFC is its defining
characteristic.</p>

<hr />

<p><strong>References:</strong></p>

<p>Boller, F., Grafman, J., &amp; Holyoak, K. J. (1995). Structure and functions of the human prefrontal cortex. New York: New York Academy of Sciences. Bongard, S., &amp; Nieder, A. (2010).</p>

<p>Basic mathematical rules are encoded by primate prefrontal cortex neurons. Proceedings of the National Academy of Sciences, 107(5), 2277-2282. doi:10.1073/pnas.0909180107 Curtis, C. E., &amp; D&#8217;Esposito, M. (2004).</p>

<p>The effects of prefrontal lesions on working memory performance and theory. Cognitive, Affective, &amp; Behavioral Neuroscience, 4(4), 528-539. Retrieved from http://cabn.psychonomic-journals.org/content/4/4/528.abstract Desmond, J. E., Gabrieli, J. D. E., &amp; Glover, G. H. (1998).</p>

<p>Dissociation of frontal and cerebellar activity in a cognitive task: Evidence for a distinction between selection and search. NeuroImage, 7(4), 368-376. Retrieved from http://www.sciencedirect.com/science/article/B6WNP-45M2XYH-W/2/bf49e4719a18fb7a65ba16cf0b5d3547 D&#8217;Esposito, M., Detre, J. A., Alsop, D. C., Shin, R. K., Atlas, S., &amp; Grossman, M. (1995).</p>

<p>The neural basis of the central executive system of working memory. Nature, 378(6554), 279-281. Retrieved from http://dx.doi.org/10.1038/378279a0 D&#8217;Esposito, M., Postle, B. R., &amp; Rypma, B. (2000).</p>

<p>Prefrontal cortical contributions to working memory: Evidence from event-related fMRI studies.. Experimental Brain Research, 133(1), 3-11. Retrieved from http://dx.doi.org/10.1007/s002210000395 D&#8217;Esposito, M., (2003).</p>

<p>Neurological foundations of cognitive neuroscience. Cambridge, Mass.: MIT Press. Retrieved from http://www.netLibrary.com/urlapi.asp?action=summary&amp;v=1&amp;bookid=78182 Freeman, A., Libet, B., &amp; Sutherland, K. (1999).</p>

<p>The volitional brain :Towards a neuroscience of free will. Thorverton: Imprint Academic. Freeman, A., Libet, B., &amp; Sutherland, K. (1999).</p>

<p>The volitional brain :Towards a neuroscience of free will. Thorverton: Imprint Academic. Frith, C. D., Friston, K., Liddle, P. F., &amp; Frackowiak, R. S. J. (1991).</p>

<p>Willed action and the prefrontal cortex in man: A study with PET. Proceedings: Biological Sciences, 244(1311), 241-246. Retrieved from http://www.jstor.org/stable/76606 Fuster, J. M. (2008).</p>

<p>The prefrontal cortex (4th ed.). Amsterdam; Boston: Academic Press/Elsevier. Fuster, J. M., Bauer, R. H., &amp; Jervey, J. P. (1985).</p>

<p>Functional interactions between inferotemporal and prefrontal cortex in a cognitive task. Brain Research, 330(2), 299-307. doi:DOI: 10.1016/0006-8993(85)90689-4 Gathercole, S. E. (1999). Cognitive approaches to the development of short-term memory. Trends in Cognitive Sciences, 3(11), 410-419. doi:DOI: 10.1016/S1364-6613(99)01388-1 Hare, T. A., Camerer, C. F., &amp; Rangel, A. (2009).</p>

<p>Self-control in decision-making involves modulation of the vmPFC valuation system. Science, 324(5927), 646-648. doi:10.1126/science.1168450 Hoshi, E. (2006).</p>

<p>Functional specialization within the dorsolateral prefrontal cortex: A review of anatomical and physiological studies of non-human primates. Neuroscience Research, 54(2), 73-84. doi:DOI: 10.1016/j.neures.2005.10.013 Meyer-Lindenberg, A., Miletich, R. S., Kohn, P. D., Esposito, G., Carson, R. E., Quarantelli, M., et al. (2002).</p>

<p>Reduced prefrontal activity predicts exaggerated striatal dopaminergic function in schizophrenia. Nature Neuroscience, 5(3), 267-271. Retrieved from http://dx.doi.org/10.1038/nn804 Miller, E. K., &amp; Cohen, J. D. (2001).</p>

<p>An integrative theory of prefrontal cortex function. Annual Review of Neuroscience, 24(1), 167-202. Retrieved from http://dx.doi.org/10.1146/annurev.neuro.24.1.167 Miyashita, Y. (1993).</p>

<p>Inferior temporal cortex: Where visual perception meets memory. Annual Review of Neuroscience, 16(1), 245-263. Retrieved from http://dx.doi.org/10.1146/annurev.ne.16.030193.001333 Morris, R. G., Ahmed, S., Syed, G. M., &amp; Toone, B. K. (1993).</p>

<p>Neural correlates of planning ability: Frontal lobe activation during the tower of london test. Neuropsychologia, 31(12), 1367-1378. doi:DOI: 10.1016/0028-3932(93)90104-8 Petrides, M., &amp; Pandya, D. N. (1999).</p>

<p>Dorsolateral prefrontal cortex: Comparative cytoarchitectonic analysis in the human and the macaque brain and corticocortical connection patterns. European Journal of Neuroscience, 11(3), 1011. doi:10.1046/j.1460-9568.1999.00518.x Petrides, M. (2000).</p>

<p>The role of the mid-dorsolateral prefrontal cortex in working memory. Experimental Brain Research, 133(1), 44-54. Retrieved from http://dx.doi.org/10.1007/s002210000399 Rossi, A., Pessoa, L., Desimone, R., &amp; Ungerleider, L. (2009).</p>

<p>The prefrontal cortex and the executive control of attention. Experimental Brain Research, 192(3), 489-497. Retrieved from http://dx.doi.org/10.1007/s00221-008-1642-z Ryding, E., BraÅdvik, B., &amp; Ingvar, D. H. (1996).</p>

<p>Silent speech activates prefrontal cortical regions asymmetrically, as well as speech-related areas in the dominant hemisphere. Brain and Language, 52(3), 435-451. doi:DOI: 10.1006/brln.1996.0023 Singh, J., &amp; Knight, R. T. (1990).</p>

<p>Frontal lobe contribution to voluntary movements in humans. Brain Research, 531(1-2), 45-54. doi:DOI: 10.1016/0006-8993(90)90756-2 Tanji, J., &amp; Hoshi, E. (2008).</p>

<p>Role of the lateral prefrontal cortex in executive behavioral control. Physiological Reviews, 88(1), 37-57. doi:10.1152/physrev.00014.2007 Tomita, H., Ohbayashi, M., Nakahara, K., Hasegawa, I., &amp; Miyashita, Y. (1999).</p>

<p>Top-down signal from prefrontal cortex in executive control of memory retrieval. Nature, 401(6754), 699-703. Retrieved from http://dx.doi.org/10.1038/44372 Weinberger, D. R., Berman, K. F., Zec, R. F., &amp; National Institute of Mental Health. (1986; 1986).</p>

<p>Physiologic dysfunction of dorsolateral prefrontal cortex in schizophrenia. Washington, D.C.: National Institute of Mental Health. White, I. M., &amp; Wise, S. P. (1999).</p>

<p>Rule-dependent neuronal activity in the prefrontal cortex. Experimental Brain Research, 126(3), 315-335. Retrieved from http://dx.doi.org/10.1007/s002210050740</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flow, Education, and Ritalin: The Missing Link Between Addiction And Learning]]></title>
    <link href="http://timofei7.github.com/blog/2010/03/11/flow-and-education/"/>
    <updated>2010-03-11T22:10:37-05:00</updated>
    <id>http://timofei7.github.com/blog/2010/03/11/flow-and-education</id>
    <content type="html"><![CDATA[<p><strong>Flow, Education, and Ritalin</strong><br/>
My eyes are glued to the screen. They rarely blink. They become irritated but
I do not notice. I am in the zone. The force is with me. I feel it flow
through me. I am coding. Even though the coding paradigm may not apply to
everyone, we all know that feeling of hyper-attention. When an activity is so
engrossing that the rest of the world fades away, we are left mano-a-mano,
tête-à-tête, our ego and the task battling together for mutual gain.</p>

<!--more-->


<p>In positive psychology the term coined by Mihaly Csikszentmihalyi to describe
this is &#8220;flow&#8221;. In his seminal work on flow, Csikszentmihalyi uses various
experiential self-report methods to study flow, and he has found some key
techniques that can help in achieving this state. However, he does not mention
the biological mechanisms behind flow. Examining this connection leads to some
interesting findings. If the brain functions during a state of flow include
the brain&#8217;s attention pathways, then this likely implicates dopamine as one of
the brain chemicals through which flow is experienced. Dopamine is in part not
only responsible for regulating attention but is also the primary
neurotransmitter of reward. Is flow then a state of constant dopamine rush&#8211;a
stream of attention and reward causing a physical high? This would explain the
addictive nature of flow. Additionally we could then draw further powerful
conclusions about the utility of flow in our lives. Specifically a
relationship between flow and dopamine suggests further directions of research
relating flow to Ritalin and education. There are thus three main topics to
address in attempting to make a case that more research into this area would
be indispensable:</p>

<ol>
<li>What are the cognitive pathways involved in flow?</li>
<li>Is dopamine the cause of flow?</li>
<li>Is education a practical application for flow theory?
Understanding how flow happens and how it relates to attention and reward can
be potentially useful in developing new techniques for learning and also can
have broader significance such as in finding non-drug based treatments for
attention disorders.</li>
</ol>


<p><strong>What are the cognitive pathways involved in flow?</strong><br/>
Csikszentmihalyi (1990) defines flow as &#8220;an intrinsically motivated, task-
focused state characterized by full concentration, a change in the awareness
of time (e.g., time passing quickly), feelings of clarity and control, a
merging of action and awareness, and a lack of self-consciousness&#8221;. He claims
that there are eight contributing factors to this feeling (p.49):</p>

<ol>
<li> A challenging activity which requires skills</li>
<li> The ability to concentrate on the task</li>
<li>The task has clear goals</li>
<li>There is immediate feedback</li>
<li>There is deep involvement in the task</li>
<li>There is a perception of control</li>
<li> Sense of self disappears</li>
<li>Sense of time is altered
The experience of these is so rewarding that people spend their lives in
search of activities that can cause it. Csikszentmihlyi studies flow using a
survey technique he invented called ESM (experiential sampling method). Over
the course of his experiments he has given thousands of participants beepers
that go off at random times during the day. The participants then record what
they are doing and answer a few questions about how they feel. He found that
the conditions necessary for a task to induce flow are that the task is
challenging but that the agent has the requisite skills to undertake it, and
that as the agent performs the task it remains interesting and provides
feedback so that the agent can experience reward. If the task is too difficult
the agent would feel stressed or anxious and if the task is too easy it would
lead to boredom.</li>
</ol>


<p>Given this definition of flow an analysis can be made of the cognitive tasks
involved. Most of the eight factors are either specific to the domain of the
task (such as the skills required) or are feelings evoked during the activity.
However, two are directly related to a cognitive ability. The ability to
concentrate on the task and to be deeply involved in it requires <em>attention</em>.</p>

<p>William James (1890) gives us the most widely used definition of attention:</p>

<blockquote><p>It is the taking possession by the mind, in clear and vivid form, of one out
of what seem several simultaneously possible objects or trains of thought.
Focalization, concentration, of consciousness are of its essence. It implies
withdrawal from some things in order to deal effectively with others, and is a
condition which has a real opposite in the confused, dazed, scatterbrained
state which in French is called distraction, and Zerstreutheit
[absentmindedness] in German. (pg. 403)</p></blockquote>

<p>This definition, in and of itself, is remarkably similar to that of flow. Flow
in part requires a singular type of attention. If all the right circumstances
are present and attention is engaged then flow happens. Neuroimaging has shown
that attention as a cognitive system is spread through several brain areas,
however higher level attention, also called executive control (not simply
visual attention), is located primarily in the frontal cortex (Miller, E. K.,
Cohen, J. D., 2001). Executive control is the system responsible for planning,
initiating behavior, inhibiting inappropriate responses, abstract thinking,
and attentional selection (Goswami, U., 2008). To be able to focus on
something the mind needs to be able to ignore irrelevant stimuli. During flow
the mind also needs to be able to initiate actions and plan the next move. The
effects of time altering and sense of self that Csikszentmihalyi mentions are
both correlated to this part of the brain as well.</p>

<p><strong>Is dopamine the cause of flow?</strong><br/>
It has been shown that the neurotransmitter dopamine is part of the attention
regulation system (Nieoullon, A. 2002). Dopamine is one of the primary
mechanisms in the brain&#8217;s reward circuit and takes part in the inhibitory part
of executive control (pg. 63). Dopaminergic system deficiencies are often
cited as causing attention deficit hyperactivity disorder and the primary
treatment for ADHD is via drugs such as Ritalin (pg. 57). Ritalin is an
amphetamine derivative and is functionally similar to cocaine (Genetic Science
Learning Center, 2010). Its primary method of action is increasing the levels
of dopamine available in the brain. The principal effect of extra dopamine in
the brain is increased energy and improved attention. However, Ritalin is
often abused not only for the attention enhancing properties but also for the
cocaine like euphoria that can occur at higher doses. Conversely drugs that
treat schizophrenia are dopamine antagonists that by reducing the available
dopamine in the brain also reduce motivation and attention (pg. 72) and even
in some cases prevent all feelings of pleasure (anhedonia) (Surguladze, S. et
all 2002 pg. 451).</p>

<p>There is evidence that dopamine is essential to the mechanisms of creativity,
ideation, and learning. The dopamine pathway increases both arousal and goal-
directedness and at the same time decreases inhibition and suppresses
competing behaviors (Flaherty, A. W., 2005. pg. 149). To confirm the
connection between dopamine and attention, one particular study used Positron
Emission Tomography (PET) scanning &#8211; dopamine receptors were tagged with
radio isotopes and the subjects were asked to perform working memory and
sustained attention tasks. The scans then showed if dopamine receptors were
activated during the tasks and in which brain areas (Aalto, S., Bruck, A.,
Laine,M., Någren, K., Rinne, J. O., 2005). One of the brain mechanisms
involved in all of this is a brain circuit that senses expected and unexpected
rewards and then signals (via dopamine) that we should learn from them (Arias-
Carrión, O.; Pöppel, E. 2007, pg. 486). This system is responsible for not
only gambling addictions but also for much of our unconscious goal-directed
motivation (pg. 484). For instance the dopamine reward and attention circuit
has also been shown to be integral in game playing (Koepp,M.J. et al. 1998).</p>

<p>It would be an oversimplification to say that dopamine alone was responsible
for all the feelings associated with flow. It is, however, fair to say that it
is strongly implicated given its crucial role in attention regulation, reward
and learning. This would suggest that flow is really those moments when the
brain is in a highly attentive state, when it is being rewarded constantly for
each action, and when it is learning at each of those reward moments. What
Csikszentmihalyi is offering in his book is a methodology for creating the
right circumstances to help facilitate this continuous cycle of
expectation/reward/learning that is suggested by the dopamine connection.</p>

<p><strong>Is education a practical application for flow theory?</strong><br/>
It is no wonder given the power of flow that Csikszentmihalyi has also turned
his attention to studying flow in educational settings. One of the essential
parts of flow is that the activity is <em>autotelic</em>, that is has intrinsic
motivation in and of itself (Csikszentmihalyi, M., 1990, pg. 67). Usually we
start an activity because of an external goal, however as we continue that
activity there is the possibility of starting to enjoy it for its own sake.
That is one of the preconditions for flow and it is also evident in the
learning patterns of toddlers &#8211; for instance a child after just starting to
read will read everything in sight (pg. 130). However in the typical school
system flow is hindered by many factors: the distractions of the classroom,
the uneven skill level of the class, the anxiety inducing difficulty of
certain subjects and the boring simplicity of others. Therein lies the
difficulty of the educational system, how to teach unwilling unmotivated
students material that is either too hard or too easy in a setting that is
distracting.</p>

<p>Csikszentmihalyi proposes that the techniques of flow be used. His first
proposal is that students be given the initial extrinsic motivation by
example. Teachers who enjoy what they do most often have students who also
want that same enjoyment (pg. 133). Given a positive model, the next step is
to match the difficulty of the material with the abilities of the students. In
a large classroom this is a challenge that does not have a ready solution.
Finally, feedback needs to be immediate and learning tasks organized in
attainable steps (pg. 131). Eric Jensen (1995) has this message for teachers:</p>

<blockquote><p>Teaching in a way that encourages students to reach the flow state may be
one of the most important roles you have. In this state, learners are highly
internally motivated, and learning becomes enjoyable. Help learners reach flow
by setting up favorable conditions for it. [&#8230;] learning will likely be
stifled by a rigid structure. Keep challenge high but stress low. Let learners
set the pace while you provide the support. Have them design a complex project
that is personally relevant, and then vary the resources to keep the task
appropriate to their ability levels. Make it exciting; use teams, simulations,
technology, and deadlines while maintaining the appropriate levels of guidance
[&#8230;] (pg. 137).</p></blockquote>

<p>Hektner and Csikszentmihalyi (1996) say that &#8220;in order to maintain the
enjoyment of flow, people must continually engage in new challenges to match
their increasing skills, and they must perfect their skills to meet the
challenges&#8221; (p. 4). Csikszentmihalyi then proposes that some of the biggest
<em>dangers</em> to flow are an overemphasis on rules, evaluation, focus on
competition and the ensuing self-consciousness that arises from that
(Csikszentmihalyi, M., 1990, pg. 137). These unfortunately are staples in many
educational systems. Jensen (1995) goes so far as to call these methods <em>brain
antagonistic</em> in his practical book on brain-based teaching (pg. xiii).</p>

<p>It is at this point that dopamine enters the picture. As schools struggle with
students&#8217; attentional problems, pharmaceutical companies and modern psychiatry
have provided the answer in the form of dopamine increasing drugs. In 2005, 29
million prescriptions for Ritalin and related drugs were written, nearly 80
percent of them for children (Pettus, A., 2006). Regardless of whether ADHD
medications are over-prescribed or not, it is obvious that a problem exists.</p>

<p>There have been followup studies into flow and learning (Egbert, J., 2003)
showing that flow can exist in classroom settings and that it can be used to
achieve higher rates of self reported interest and energy (Rathunde, K.,
Csikszentmihalyi, M., 2005). In a comparison study of learning states in
traditional versus Montessori schools, Csikszentmihalyi found that optimal
experience (a term used to describe a positive, flow-inducing, learning state)
leads to more <em>undivided</em> interest in the material by the students (pg. 506).
A case may thus be made that flow techniques should be further studied not
only in the context of enhancing the school experience, but that innovative
methodology may be used to alleviate some of the need for amphetamines in
schools.</p>

<p>In 1933, John Dewey suggested that the best state of mind for learning is one
that is &#8220;playful and serious at the same time&#8221; (p. 286). Today one can
certainly imagine an educational setting where: the material is custom
tailored to each student&#8217;s ability level, the teacher enjoys the material, and
in which the student, excited to learn, can engage with the material fully to
the point of losing track of time. In a traditional classroom this still seems
difficult to accomplish, even with all the techniques that Csikszentmihalyi
(2005) and Jensen (1995) mention. However there is no technological barrier to
design a system in which students learn through a technology (in a system that
automatically adjusts for difficulty like the one employed by the GRE test)
such that their minds can be optimally activated. Brain antagonistic models of
learning have shown themselves to be problematic at best and in the search for
a new methodology perhaps flow theory can provide some insight into the
problem of attention and motivation in students.</p>

<p>The correlation between flow and dopamine shows us an area ready for further
exploration. If the techniques of flow elicit a type of dopamine high, then
studying these methods may provide answers to attentional disorders. This can
also drive the realization that the mechanisms behind creative passion are
similar to the mechanisms of cocaine addiction, and that can perhaps help find
answers to what pushes people toward one or the other or both. Learning can
and should be <em>joyful</em> (Wolk, S., 2008) and <em>addicting</em>, flow and dopamine
shows us a way to make it so.</p>

<hr />

<p>References:</p>

<p>Aalto, S., Bruck, A., Laine, M., Nagren, K., &amp; Rinne, J. O.
(2005). Frontal and temporal dopamine release during working memory and
attention tasks in healthy humans: A positron emission tomography study using
the high-affinity dopamine D2 receptor ligand [11C]FLB 457. Journal of
Neuroscience, 25(10), 2471-2477. doi:10.1523/JNEUROSCI.2097-04.2005</p>

<p>Arias-Carrión, O., &amp; Pöppel, E. (2007). Dopamine, learning and reward-seeking
behavior. Acta Neurobiol Exp, 67(4), 481-488.</p>

<p>Csikszentmihalyi, M. (1990). Literacy and intrinsic motivation. Daedalus,
119(2, Literacy in America), 115-140. Retrieved from
http://www.jstor.org/stable/20025303</p>

<p>Csikszentmihalyi, M. (1991; 1990). Flow :The psychology of optimal experience.
New York: HarperPerennial.</p>

<p>Dewey, J. (1933). How we think. D. C. Heath, Boston.</p>

<p>Egbert, J. (2003). A study of flow theory in the foreign language classroom.
The Modern Language Journal, 87(4), 499-518. doi:10.1111/1540-4781.00204</p>

<p>Flaherty, A. W. (2005). Frontotemporal and dopaminergic control of idea
generation and creative drive. The Journal of Comparative Neurology, 493(1),
147-153. doi:10.1002/cne.20768</p>

<p>Genetic Science Learning Center. (2010, March 10). Ritalin and cocaine: The
connection and the controversy. Retrieved March 10, 2010, from
http://learn.genetics.utah.edu/content/addiction/issues/ritalin.html</p>

<p>Goswami, U. (2008). Cognitive development: The learning brain New York, NY,
US: Psychology Press.</p>

<p>Hektner, J., &amp; Csikszentmihalyi, M. (1996). A longitudinal exploration of flow
and intrinsic motivation in adolescents. Paper presented at the annual meeting
of the American Educational Research Association, New York.</p>

<p>James, W. (1981). The principles of psychology. Cambridge, Mass.: Harvard
University Press.</p>

<p>Jensen, E. (2008). Brain-based learning :The new paradigm of teaching (2nd
ed.). Thousand Oaks, CA.: Corwin Press.</p>

<p>Koepp, M. J., Gunn, R. N., Lawrence, A. D., Cunningham, V. J., Dagher, A.,
Jones, T., et al. (1998). Evidence for striatal dopamine release during a
video game. Nature, 393(6682), 266-268. Retrieved from
http://dx.doi.org/10.1038/30498</p>

<p>Miller, E. K., &amp; Cohen, J. D. (2001). An integrative theory of prefrontal
cortex function. Annual Review of Neuroscience, 24(1), 167-202. Retrieved from
http://dx.doi.org/10.1146/annurev.neuro.24.1.167</p>

<p>Morgan, H. (2004). Real learning :A bridge to cognitive neuroscience (1st
ed.). Lanham, Md.: ScarecrowEducation.</p>

<p>Nieoullon, A. (2002). Dopamine and the regulation of cognition and attention.
Progress in Neurobiology, 67(1), 53-83. doi:DOI: 10.1016/S0301-0082(02)00011-4</p>

<p>Pettus, A. (2006, July-August 2006). Psychiatry By prescription: Do
psychotropic drugs blur the boundaries between illness and health? Harvard
Magazine. Retrieved from http://harvardmagazine.com/2006/07/psychiatry-by-
prescripti.html</p>

<p>Posner, M. I., &amp; Petersen, S. E. (1990). The attention system of the human
brain. Annual Review of Neuroscience, 13(1), 25-42. Retrieved from http://arjo
urnals.annualreviews.org/doi/abs/10.1146/annurev.ne.13.030190.000325</p>

<p>Rathunde, K., &amp; Csikszentmihalyi, M. (2005). Middle school students&#8217;
motivation and quality of experience: A comparison of montessori and
traditional school environments. American Journal of Education, 111(3),
341-371. Retrieved from http://www.jstor.org/stable/3566831</p>

<p>Schiefele, U., &amp; Csikszentmihalyi, M. (1995). Motivation and ability as
factors in mathematics experience and achievement. Journal for Research in
Mathematics Education, 26(2), 163-181. Retrieved from
http://www.jstor.org/stable/749208</p>

<p>Surguladze, S., Keedwell, P., &amp; Phillips, M. (2003). Neural systems underlying
affective disorders. Advances in Psychiatric Treatment, 9(6), 446-455.
doi:10.1192/apt.9.6.446</p>

<p>Wise, R. A. (2004). Dopamine, learning and motivation. Nature Reviews.
Neuroscience, 5(6), 483-494. Retrieved from http://dx.doi.org/10.1038/nrn1406</p>

<p>Wolk, S. (2008, September 2008). Joy in school. Educational Leadership, 66,
8-15. Retrieved from http://www.ascd.org/publications/educational_leadership/s
ept08/vol66/num01/Joy_in_School.aspx</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Moment in the Life of Camus' Sisyphus]]></title>
    <link href="http://timofei7.github.com/blog/2010/02/28/a-moment-in-the-life-of-camus-sisyphus/"/>
    <updated>2010-02-28T22:30:47-05:00</updated>
    <id>http://timofei7.github.com/blog/2010/02/28/a-moment-in-the-life-of-camus-sisyphus</id>
    <content type="html"><![CDATA[<p>I watch my cursed boulder tumble down my mountain. I heave a sigh of relief;
my aching muscles allowed a brief respite. As I stand on its majestic craggy
peak, I survey my mountain beneath me. My boulder is now far out of sight, but
I can feel it down below in the darkness waiting for me. I send my thoughts
out to it &#8211; my boulder you are my work, my affliction, my friend and my
enemy. I shall see you soon enough. In these seemingly countless days,
logically countable but practically indistinguishable, my mind is not always
so clear. At this instant I am aware &#8211; tomorrow I may not be. I grasp the
moment, tenderly. Let me slow it down and take joy in my thoughts. Before my
curse &#8211; I can barely remember &#8211; I took my thoughts for granted. Mortal, I
had a limited amount of time for thoughts, yet I did not enjoy them. Immortal,
and now each thought is precious &#8211; I have forever and thus have infinite
thoughts, yet I take joy in each, insignificant as it is. The absurdity
continues, the one constant along with my rock and my mountain to keep me
company. Yet as I stand there, the cold rare mountain air turning my breath
visible, I am happy.</p>

<!--more-->


<p>I remember the moment when first I became fully conscious of my eternal
meaninglessness &#8211; the horror I felt. With time I came to understand that my
previous life, filled with hopes and dreams, was as absurd as my rock and
mountain world. I lied to myself then in order to avoid becoming conscious of
the true nature of existence. Now I have no such luxury, the stark landscape,
unchanging except through my actions, reminds me continually of the futility
of my labor.</p>

<p>Mercury says that Camus once wrote about me, &#8220;His fate belongs to him.&#8221;<sup>1</sup> He
calls me an &#8220;absurd hero.&#8221;<sup>2</sup>  I now accept this role. My existence is an
analogy for the futility of rebellion &#8211; there is no escape from the absurd. I
have no hope of completion and no hope of a purpose. Hope would be a lie &#8211; I
can not console myself with lies. In my acknowledgment of my own
ridiculousness I find freedom. I am free to experience, to find joy within
myself or to not, and I am free to create my own happiness, even while I am
not free from the binds of my curse.</p>

<p>Another mortal writes, &#8220;Because there is no absolute certainty to which to
turn, each person must discover ultimate purpose on his or her own.&#8221;<sup>3</sup> Is my
revolt in spite of meaninglessness my purpose? More often than not I get so
caught up in the pure action of my task, nothing else about my condition
matters. However, I have accepted that although the task is itself futile, I
am free to enjoy it. The feeling of my body straining against the massive
weight, navigating the treacherous terrain, my ragged breath, the pulsing of
my immortal heart, these things I look forward to. This world is my creation.
By my actions I define it. It is my flesh and blood and thought, and thus my
purpose.</p>

<p>I listen to my breathing. I start my descent down my beloved hated mountain.
My parting thought at Camus is this: He should not use me as an example of an
&#8220;absurd hero,&#8221; as by that action he gives my existence semblance of meaning.
He takes away my freedom to pursue my own meaning. Is his &#8220;absurdity&#8221; the lack
of knowledge of the bigger context or the knowledge that any bigger context is
meaningless? If the context of my existence is a persistent analogy for
absurdity then it might cease itself to be absurd. Perhaps Camus was simply
ignorant of the larger context of his existence as a tiny thread in the cloth
of existence, locally appearing insignificant but with ripples of continuity
that pervade everything.</p>

<p>Camus maintains that it is an <em>ascesis</em> to be an absurd creator. This I can
understand. I lean into my burden, striving for the purpose of striving or for
the purpose of illustration, either way happy to be reunited with my boulder.</p>

<p>notes</p>

<p>1 Camus, A. (1964). The myth of Sisyphus,and other essays. New York: A.A.
Knopf. (pg. 123)</p>

<p>2 Ibid. (pg. 120)</p>

<p>3 Csikszentmihalyi, M. (1991; 1990). Flow :The psychology of optimal
experience. New York: HarperPerennial. (pg. 225)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[assignment: write about where I see myself in x number of years]]></title>
    <link href="http://timofei7.github.com/blog/2010/02/19/assignment-write-about-where-i-see-myself-in-x-number-of-years/"/>
    <updated>2010-02-19T21:53:28-05:00</updated>
    <id>http://timofei7.github.com/blog/2010/02/19/assignment-write-about-where-i-see-myself-in-x-number-of-years</id>
    <content type="html"><![CDATA[<p>Instead of writing seriously, I wrote an imaginary interview. BTW:Living in a
van&#8230; happened in real life; C.com/&#8221;light goop&#8221; &#8230;well it was supposed to be
about the future!</p>

<p><strong>FRAMBERG MAGAZINE INTERVIEW (Issue: March, 2018)</strong><br/>
<strong>Today we interview Tim Tregubov,  one of the visionaries behind a small company that might just be changing the way we interact with the world.  C.com is responsible for MultiPhen technology and the company is developing promising new applications that will further integrate adaptive intelligent systems with <em>the human system</em>.  The company is being heralded as a forerunner of a new type of business model which they are calling <em>engaged activism</em>.   We will find out what makes him tick, what C.com is all about and how it originated.</strong></p>

<!--more-->


<p><em><strong>Framberg:</strong> So you are one of the founders of C.com? </em></p>

<p><strong>Tim:</strong> Yep. Although it wasn&#8217;t like we just had a great brainstorming session and out popped a company.  In fact I&#8217;d say c.com isn&#8217;t a company at all, and it is my hope that it never will be!</p>

<p>It started as just a group of friends pulling allnighters in a computer lab at
college.   We made a good team and had a blast doing it.  Then we all
graduated and got &#8220;real&#8221; jobs.  We ended up working cold rainy nights sitting
in front of computers in cubicles doing other peoples&#8217; bidding.  The good
times were just a memory.  Many years later, we&#8217;d get laid-off from our jobs
at the big corporations to be replaced by new dream-filled youth &#8211; youth just
as ready as we were to give up their dreams, creativity and energy in exchange
for job security.</p>

<p><em><strong>Framberg: </strong> So what happened, that&#8217;s not the end of the story right?</em></p>

<p>Tim: Not at all.  In fact, that never happened!  If it had happened, c.com
never would have even been a twinkle in our eyes. I say this as a warning to
anybody who has had an idea but wants to put it off in favor of making some
money first.  Don&#8217;t put the golden handcuffs on, rather grab your friends,
grab your idea and sprint out onto the playing field.  If there is one time in
your life when you should do this it is now, not later.</p>

<p>So what really happened was that we kept trying ideas.  My ideas were always a
bit grandiose and self involved but they were cute.  I have always been an
excitable person and tend to dive right into an idea.  Not being a great
swimmer I tend to cannonball.  This sets off lots of waves and people get wet.
Diving right into this analogy &#8211; this would whet their appetite. Sometimes
one of the ideas would spin off an idea wave that we could surf.  This is not
to say all the ideas were mine &#8211; I&#8217;m going to get beat up back at the office
for this.</p>

<p><em><strong>Framberg:</strong> Why do you say that c.com isn&#8217;t a company? What is it?</em></p>

<p><strong>Tim:</strong> c.com is really more of a family.  If you prefer the word company we insist on the older interpretation of the word &#8211; the theater company &#8211; the company of companionship.  The organizational structure of c.com is less of an &#8216;inc&#8217; and more of a fellowship.  This sort of company is based around the passion of the founders.  There are no employees per se, everybody is an owner. There is no boss.  We only work on projects we really love. We don&#8217;t compromise our projects for investors or clients but work for the love of the thing rather than for the monetizing of it.  From the beginning we knew we didn&#8217;t want to be VC controlled vaporware. What is our mission?  Simple. Create.</p>

<p><em><strong>Framberg:</strong>  Just to create?  Isn&#8217;t the company involved in certain
particular areas?</em></p>

<p><strong>Tim: </strong> It isn&#8217;t &#8220;just&#8221;!   We create because it is imperative.  Your readers have perhaps heard of the existential maxim &#8220;existence precedes essence.&#8221;  We have a duty to create the world as we believe it should be. So it isn&#8217;t just lighthearted play. I believe strongly that once we realize that we are completely responsible for the world, and that by each of our actions we define the world, in part, according to our wishes &#8211; then it becomes clear that our actions do not simply exist in a void and certainly are not just harmless. Quite the contrary.  In fact, every action has meaning and at c.com we strive toward having a socially positive impact on the world.  Every project we undertake has a socially positive foundation.  Whether it is a new educational toy for improving math skills in preschoolers or a social network to promote micro-philanthropy for schools in Ghana, all our projects at their core try to focus on improving the human condition.</p>

<p><em><strong>Framberg: </strong> That is quite a philosophical underpinning for a company! Is
this what you call engaged activism? Those sound like lofty ideals, but how do
you manage in practice?</em></p>

<p><strong>Tim:</strong> Yeah, this is definitely a part of <em>engaged activism</em>.  When we started we had two main goals. One was to do work which we personally found engaging.  In the lab we would pull allnighters not because we had to but because we were in the zone. We were fully &#8220;into&#8221; our work. We also enjoyed each others&#8217; company.  So our primary motivation was &#8220;engaging work with cool people.&#8221;</p>

<p>Our second tenet was that our work had to be meaningful.  We wanted to
contribute to society and be able to believe in what we were striving toward.
So our secondary motivation was &#8220;socially positive projects that we all could
believe in.&#8221;  Most importantly we didn&#8217;t want to simply donate some part of
our profits to good causes, we actually wanted our projects to be good causes
themselves!  If you are working with people you like, on a project you believe
in, and the work itself is rewarding then you are addicted and fulfilled and
happy.</p>

<p><em><strong>Framberg:</strong> What about creature comforts though?  What about money?</em></p>

<p><strong>Tim: </strong> When we started we all worked for free.  We lived in our parents&#8217; basements or at our friends&#8217; houses.  We worked nights and we barely scraped by.  We were happy.  I believe that the usual things people work toward, money/fame/success/comfort, can all be side effects of impassioned work.  If we loved what we did and put that love into our work then this would be recognized and appreciated.  This was all secondary to the actual fulfillment of the work itself.</p>

<p><em><strong>Framberg:</strong>  Are you happier now that you have achieved some success?</em></p>

<p><strong>Tim:</strong>  I wouldn&#8217;t say that the success has any bearing on my happiness.  I was happy homeless and I am happy now.  We have cooler toys in the office though now, and with the added success we can create better more interesting things.</p>

<p><em><strong>Framberg:</strong>  Homeless?  Would you like to share that story?</em></p>

<p><strong>Tim: </strong> [Laughs] In college one summer I lived in a van.  It was my parents&#8217; van and I pimped it out so I wasn&#8217;t exactly being homeless.  I was however a bit persecuted by the campus police and had to park discreetly at night.  Some nights I spent in the Walmart parking lot. I showered at the computer science building, so it was really actually rather comfortable.</p>

<p><em><strong>Framberg: </strong> So tell us more about yourself.  When you are not living in a
van what do you do in your free time?</em></p>

<p><strong>Tim:</strong>  Free time?  Mostly I hang out at the studio.  That is what we call the office. I also hike a lot and spend time with the family.  I have an 8 month old daughter, Anki, we hang out at the studio together all the time.  She is a genius in the making I can tell.  Her favorite toy right now is this really expensive prototype &#8220;light goop&#8221;.  It glows and changes color depending on the shape it is in.  It is not yet practical to mass produce, but she loves being the only one in the world with one.</p>

<p><em><strong>Framberg:</strong> Is that a MultiPhen technology?</em></p>

<p><strong>Tim:</strong>  All of our tech is MultiPhen these days.</p>

<p><em><strong>Framberg:</strong>  What is MultiPhen exactly?</em></p>

<p><strong>Tim:</strong>  We don&#8217;t rightly know ourselves.  Actually, it is simply a buzzword I came up with to call our technology.  We were making things that interacted at multiple levels and exhibits multiple phenomenons?   MultiPhen simply sounded cool.   People love buzzwords.</p>

<p><em><strong>Framberg: </strong> We suspected that was the case all along.  It sounds like you
are a bit of a free thinker.  Have you always been a rebel?  Did that help you
get to where you are?</em></p>

<p><strong>Tim:</strong>  I wouldn&#8217;t say I am a rebel.  [Laughs] I have not had a traditional path though.  My life used to be controlled by fear.  It made me not take the traditional path to college when I should have, instead I tried to start my own web design business after high school and failed.  Then I worked as a programmer for a short while and then as a sysadmin at the college where I eventually started taking classes, and even more eventually graduated from.  That experience changed me quite a bit, I became braver and started moving through life faster.  Went to grad school right after that and started c.com.</p>

<p>I&#8217;ve learned a lot from my mistakes.  It is unfortunate that wisdom cannot be
taught but must be learned from experience.  I know that my strange background
has helped make me who I am and I do not regret it.  I only wish that I had
gained the wisdom of how to be braver and happier earlier.  I still like to do
things a bit differently, but now it is a choice and partially an affectation
&#8211; I am much less subject to the anxieties that plagued me when I was younger.
This path of discovery, though, made me open to learning and exploring and
playing at points in my life when other people were concentrating on other
things.  I think I was fairly self-restricted as a teen, more so than is
normal, but as the years went by I became more internally free and
rediscovered that play and energy of childhood.  A lot of what I have achieved
has been due to this process of discovery.</p>

<p><em><strong>Framberg:</strong> What is in store in the future for you personally?</em></p>

<p><strong>Tim: </strong> That is a good question.  More of the same!  In college I took a class that brought up the question of happiness and one thing that we did in the class was identify our main strengths.  My top five strengths were creativity, curiosity, love of learning, energy and appreciation of beauty.  As long as I am able to express my strengths and believe that I am making a positive contribution to the world, then I am happy.   My family, my friends and c.com have enabled me to live the good life so far.  I hope I am up for the challenge of raising my daughter and future little c.com&#8217;ers.  That is my next big life challenge.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fear, happiness]]></title>
    <link href="http://timofei7.github.com/blog/2010/01/10/fear-happiness/"/>
    <updated>2010-01-10T22:24:05-05:00</updated>
    <id>http://timofei7.github.com/blog/2010/01/10/fear-happiness</id>
    <content type="html"><![CDATA[<p>What is the mind when it is happy and when it is unhappy? Most likely the
answer is different for each person, but to understand it for myself I first
need to discern when it is that I am happy. When I think about happiness the
first concept that comes to mind is friendship. I have always heard people say
that in college you make friends for life. The kind of friends that will be
with you your whole life and will stick by you through everything. I never
believed them. A lot of my friends are part-time, we sometimes keep in touch,
mostly through the noncommittal medium of facebook. More recently however, I
managed to make some friends who I feel I could call lifelong. I have always
been slightly afraid of people, and social situations are often uncomfortable
for me, yet I have unfailingly been drawn to take project classes. This seemed
uncharacteristic for me until I realized that the times I feel most
comfortable with someone are when there is a common external goal that we
share. C.S. Lewis thought that true friendship, which he categorized as the
love called philia, could only exist between people who share a common vision
or activity. He claimed that because this was the least biologically necessary
love, when it truly existed, it was the most admirable. He lauds friendship
and says, &#8220;To the Ancients, Friendship [notice the capitalization] seemed the
happiest and most fully human of all loves; the crown of life…&#8221;<sup>1</sup> Through
friends that I made over many shared hours in computer labs I now see more
clearly what he meant. Lewis&#8217;s various categories become blurry at this point
yet the importance he places on shared interest remains.</p>

<!--more-->


<p>When I look back on moments when I have been happy I find that they are often
connected with actions. I would be happy going to the beach with people. I
would be happy watching hulu by myself. I would be happy when people
appreciate me or praise me at work. I would be happy hiking and I would be
happy skiing. All of these moments of happiness involve action.</p>

<p>Skiing is one of those actions that makes me happy. The beauty of the winter
landscape, the rush after a good run and the thrill of surviving a double
black, these combine to force my frozen face muscles into a permanent grin.
Having just come back from a weekend ski trip, both the physical happiness of
skiing and the more emotional happiness of being with friends are still vivid
in my mind.</p>

<p>The pleasure of skiing, according to my Intro to Psych class, is dopamine
based: excess dopamine is generated by the opioid effect of the endorphins
coursing through my body which are themselves released during strenuous
activity. The neurotransmitter dopamine is responsible for reward and
pleasure. This effect is physically addictive and is the primary mechanism
behind drug addictions. When my body clicks into a rhythm of motion, when that
rhythm is true and enables my skis to smoothly cut through the snow, then I
can fly down the mountain and pull up to the lift grinning and panting like a
madman. The feeling, if I can describe it, is the feeling of success,
invincibility and wholeness; not just the wholeness of body and mind, but also
of body with skis and with the mountain. This may sound hyperbolic but what is
necessary for this feeling to happen is for my mind to trust my body, for my
body to trust my skis, and for my skis to feel the snow and find a line that
flows with it not against it. Skiers always talk about the elusive great run
of the day, when suddenly it all clicks into place. Like gambling it is that
rush of the great run that keeps them going back up the chair in the freezing
cold over and over.</p>

<p>This is the same feeling that I experience when I get into the flow of coding
or drawing or even having a stimulating conversation. Many people have written
about the pleasure of <em>flow</em><sup>2</sup> and I can attest that I crave this state above
many other things in life. This feeling of warm excitement mingled with
conviction opens the mind&#8217;s gates. I become smarter, better, faster and
stronger when I am in this state. This kind of happiness begets more happiness
and thus it is no wonder that it is so sought after. With enough happiness I
feel invincible.</p>

<p>This weekend however was not only about skiing but about spending time with
close friends. What surprised me was that we did not even ski much. In the
past I have sometimes been accused of having frantic skiing syndrome. I always
had to be at the mountain when the lifts opened and would bring lunch in my
pocket so I could eat it on the lift and not have to stop. However, this time
I was happy to lounge about with my friends over a long breakfast and to not
even ski at all on Sunday. The common goal we had was to be with each other;
it had somehow surpassed the external goals we had shared when we became
friends in the lab originally. I was happy to simply spend time with them,
playing board games I was terrible at and not feeling self-conscious when I
did not score a single point in a game. Perhaps the common aspect between that
physical happiness of flow and of hanging out with my friends was that in both
cases the feeling of trust was strong enough to not have any reservations or
feelings of self-consciousness. In Intro to Psych I learned that oxytocin is a
neurotransmitter responsible for feelings of attachment and trust. It also
reduces activity in the amygdala and by this action reduces feelings of fear.
This feeling of comfort without any fear is my holy grail. As with the
physical happiness this is empowering. For me it seems that happiness is
directly related to not feeling self-conscious. When I find that zone doing
something challenging yet rewarding or am with people who accept me, then it
is that I also feel happiness.</p>

<p>By this definition when I am unhappy the exact reverse is true. When I am
failing at something or when I feel self-conscious, then it is that I feel
unhappiness. I am most unhappy when I am afraid. I have recently realized that
much of my life I have made decisions based on fear. Those moments when I
succumb to fear are the worst moments in my life. Not only do I loathe myself
for succumbing to the fear, but I also loathe myself as I try to justify it
and attempt to reason that the decision was for the best. The feeling of
unhappiness that ensues is overwhelming. There are many components to this
unhappiness: regret, hopelessness, shame, helplessness and depression. At
these moments my mind is a constricted knot of anxious thoughts. I feel
physically ill and my insides feel like they mimic the state of my mind.</p>

<p>When I was a teenager I remember a few families going on a picnic to a lake.
There was a high jump tower there off of a bridge. I was so terrified that I
would be pressured to jump with everybody else that I ran away. I spent the
whole day by myself off in the woods by the lake trying to avoid anybody who
might ask why I was not with the group. To this day I regret that
cowardliness. I have since conquered my fear of jumping off of high places to
some degree, but that memory is a constant reminder of pure unhappiness. These
days I have learned to deal with situations better, but I still tend to have
avoidant behavior that will periodically cause me personal shame.</p>

<p>I can not say how often I am happy or unhappy; no more or less than my
perception of the norm for others. However after thinking about the state of
mind I am in when I am happy or unhappy I realize that they are both closely
tied to fear; happiness is the absence of fear and unhappiness is fear and its
aftereffects. All my happinesses can be said to be variations on this basic
theme.</p>

<p>notes</p>

<p>1 Lewis, C. S. (1960). The Four Loves. New York, NY: Harcourt,
Brace, 1960. pg. 57.</p>

<p>2 Haidt, Jonathan (2006). The Happiness Hypothesis. New York, NY: Basic Books.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conscious Evolution: the possibilities of technology+education]]></title>
    <link href="http://timofei7.github.com/blog/2010/01/03/conscious-evolution/"/>
    <updated>2010-01-03T22:16:28-05:00</updated>
    <id>http://timofei7.github.com/blog/2010/01/03/conscious-evolution</id>
    <content type="html"><![CDATA[<p>Is it possible for humanity to consciously direct our own evolution and if so
can we evolve to be better, smarter and faster? Can we evolve ourselves to be
able to sustain an utopic society? In my intro to psychology class one of the
professors told the following story. A professor experimented on his own
newborn by reading Greek poetry to him. He read the same couple of paragraphs
to him every day until the infant was six months old and then stopped. When
the boy turned ten his father started having him memorize Greek passages. He
counted how many repetitions the boy would need to fully memorize a passage
and found that those paragraphs that the boy had previously been exposed as an
infant required half the repetitions that the new passages took. This story is
anecdotal and would require a better designed longitudinal study to prove,
however it was inspirational for me and one of many such stories in that class
that convinced me to change my major from computer science to cognitive
science. I learned in that class that if we utilize the power of our learning
brains, the possibilities for achievement both individually and as a society
could be endless. I became fascinated with the question of how we can harness
our learning, and specifically how technological solutions could be combined
with cognitive science research to take learning to new levels.</p>

<!--more-->


<p>This may sound hyperbolic, and indeed such thoughts can lead to Matrix-like
imaginations of possibilities. In my case they often do. However, back on
planet earth, this interest guided me to take a digital electronics class to
learn how to make electronic toys, child development classes to learn how
memory develops, computer science classes for implementation, and education
classes to learn about what is being done in this field. I also started
thinking about various experiences in my life through the lens of this
interest. I would like to write about a few of these experiences and how they
all contributed to my interest in this subject.</p>

<p>Several summers ago I spent a month in Russia. My parents are from Moscow and
on a whim I decided to go there to discover my roots. One of my goals was to
visit parts of Moscow that my parents had told me about. This meant that I
spent a lot of time on the subway going from place to place, taking pictures
and meeting people. One experience on the subway changed how I thought about
public education. The Moscow subway is one of the deepest in the world &#8211;
designed to function as a bomb shelter. This meant the escalator rides were
steep and long. Along the way there was a city wide public announcement system
that spouted such epitaphs as: &#8220;Protect the heritage of your Russian roots.
Love the language of Pushkin and don&#8217;t swear&#8221; and &#8220;Be kind to people. They
deserve your respect as you do theirs&#8221;. I was astounded at the blatant social
brainwashing and quickly learned to disdain the announcements. Later on the
subway a large group of rowdy teens came into the car. At the next stop a few
older people stepped onto the train and none of the teens moved. A bit later
an announcement came on, &#8220;Be nice to those older or weaker than you. Give your
seat to the elderly or to those with young children.&#8221; At the very next stop
when some older people again came onto the car. This time however a few of the
teens got up and let them sit down. I doubt they realized why they did this as
even I had started blocking out the announcements.</p>

<p>I was confused after seeing this. Moscow was dirty and people were mean. They
needed this basic sort of public education which their parents weren&#8217;t able to
offer because they themselves did not know it. Was this a dystopian brain-
washing or was it an example of proper use of educational policy because it
was for a social good? I was surprised how strongly I was affected by this
seemingly small incident. I realized that an societal educational system must
burden itself with teaching how to live in society and that society can be
improved by this. However, at the same time it must walk a very careful line
and not cross over into brain-washing. What is the role of education in
society? This is not an easy question, but it does bear thinking about.</p>

<p>After my Moscow trip I had the opportunity to teach a few high-school students
Russian. This was quite possibly one of the most rewarding things I have ever
done. I had never taught before and approached it with a lot of energy, or so
I thought. The students outpaced my energy level by orders of magnitude. They
would jump to answer questions, blurting out answers and giggling with
excitement. They were learning Russian for the fun of it, as it was not
offered at their school and they just wanted to learn for themselves. It was
inspirational to watch them and a rush to be needed by them, to be the source
for their excitement, to be wrung dry by their questions. I am sure I learned
a lot more from this experience than my students.</p>

<p>Moving closer to home, I have a three year old niece who is unbelievably adept
on the computer. Not only does she have the physical coordination for moving
the mouse and the knowledge of how to drag windows and files around but she is
addicted to starfall.com. This site is a free educational site for kids. It
has fun songs and graphics with a myriad of different exercises. She spends
hours on the site. She knows her alphabet, can count fairly well, and has a
great vocabulary. All of this without any pressure from her parents and, since
she is too young for even pre-school, no school. When I was her age my mom
would read to me certainly and we would do a little bit of alphabet work in
Russian, but it was a struggle for both of us. What amazes me so much is how
much time and effort she is more than willing to put in herself. She would
rather play alphabet games on starfall than play with her toys. This is
because the learning is a game in itself. Since she plays on the adult&#8217;s
computer she gets to play with a toy that belongs to her parents. Often she
will exclaim, &#8220;I go work on starfall now!&#8221;. She may use the word &#8216;work&#8217; but
she very clearly enjoys it (most likely she uses that word because her parents
will often &#8216;work&#8217; on the computer).</p>

<p>That a three year old is so interested in the animated colorful world of a
computer game should come as no surprise. For me, watching her enjoy learning
and easily grasping letters and numbers really underscores the potency of
technology as a learning tool.</p>

<p>These few small experiences along with many others have all contributed to my
interest in learning with technology. The digital electronics class I took
this summer was perhaps the most fulfilling class I have ever taken. In groups
of two we designed and built an electronics project from scratch. My interest
in learning informed our choice of project. We were toying with the idea of
using an accelerometer (a chip for detecting motion) somehow, and I was
thinking of various toys that could be reinvented digitally. For instance the
tilt-maze game is both ubiquitous and yet also not very interesting. Once you
have the dexterity to beat it you might as well throw it out. How much more
interesting would it be if you had to solve a moving maze and also take the
shortest path through it for points based on the least number of steps taken.
We implemented this game on a small eight by eight matrix of multicolor led
lights. When it came to designing the levels for the game we realized that
there were many more possibilities than we originally envisioned. The maze
could appear to be a multicolor fire spewing dragon with a particular precious
stone on his tail that is the target of the level, or it could be man eating
plants that open in a certain sequence. Designing, programing and building
this game was challenging and we stayed up many late nights. At the same time
it was extremely fulfilling and made me very happy. By the end of the class we
had a working game that people enjoyed playing and which also had an
innovative brain puzzle aspect to it.</p>

<p>All these stories may appear disjointed, but the connection is that they all
spurred my interest in new technologies for education. This leads to an
interesting question: since I put a lot of effort into this interest and am
contemplating grad school in related areas, does it make me happy? Mostly it
has entailed work, exams, projects and sleep loss. On the other hand, just
thinking about some of the possibilities ahead stirs up a great excitement in
me.</p>

<p>I am convinced that this area can use a lot of work. For instance the area of
math education is a prime choice for new ideas. I grew up with a math phobia
in grade school. My teachers were terrible, using performance pressure and
boring teaching to induce fear in their students. However, it is possible to
have fun with math without the pressure and competition that seems to often
lead to math phobia. One current research project that might help is siftables
(www.sifteo.com). These are little cubes that can display letters, colors and
number and react to each when in close proximity. Kids can play with the
blocks that change and interact as they move them. A math game with siftables
could display numbers and math operands and react as students move the blocks
to form equations. Tangible media such as this has huge potential. The fact
that this area is growing and new is exciting.</p>

<p>Still, exciting is not necessarily happy. In my case however, simply being
creatively busy does make me happy. My parents are both artists and when I was
growing up I remember in the evening after a late European style dinner ending
around 10pm my dad would say, &#8220;ok I&#8217;m going downstairs to work some more.&#8221; I
grew up in a house where it was never OK to not have a project going. Now I
find that I am unable to simply do nothing. Even when on vacation I have a
hard time relaxing without some purpose tugging at me. I have noticed that
during those times when I don&#8217;t have a project in the works, I not only feel
useless but almost physically feel sick. This is the antithesis of happiness.
Thus being busy with projects in an area I am interested (especially one that
can bring inspiration and learning to others) brings me a lot of joy.</p>

<p>It appears that a common thread ties together a lot of my recent college
experiences. It has emerged slowly and is still not completely formed, but at
least right now I feel a pulling that gives me a direction to work toward.
This will most likely all change as I gather new experiences, but for now I
enjoy it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geopolitical Representations in a Networked World: current and future]]></title>
    <link href="http://timofei7.github.com/blog/2009/11/09/geopolitical-representations-in-a-networked-world-current-and-future/"/>
    <updated>2009-11-09T23:32:21-05:00</updated>
    <id>http://timofei7.github.com/blog/2009/11/09/geopolitical-representations-in-a-networked-world-current-and-future</id>
    <content type="html"><![CDATA[<p>They are afraid &#8211; the great firewall of China, the blocking of Facebook in
Pakistan, Bangladesh and others, Iran’s blocking of foreign media and the
eventual temporary internet and text message blackout following 2009
presidential elections (Zuckerman, 2010), these are just a few instances of
how powerful social and citizen media have become and how governments are
attempting to cope with the loss of informational control. In countries where
the press is tightly controlled, citizens, and often foreign media as well,
turn to various self-reporting outlets such as Twitter, Indymedia, YouTube and
other blogging sites. These social media networks allow not only information
to disperse across borders with unprecedented ease (such as the case of Iran’s
bloggers) but also allows cross-scale interaction between transnational actors
and local, previously out-of-sight groups (such as the Mexican Zapatistas)
(Dodds,K., 2007). It has become common to see Twitter and YouTube posts
referenced on various American news outlets as part of their main news
segments (Zuckerman, 2010).</p>

<!--more-->


<p>By breaking the traditional boundaries of scale (Glassman, J. 2002) and the
“territorial trap” (Agnew, J., 1994) of geographical state-based social
identity these various technologies are changing the geopolitical landscape.
New media are being used by various actors including politically oppressed
parties, minority ethnic groups, non-governmental organizations and civil
societies across the world for the purposes of collaboration, drawing
attention to causes and issues, and expressing opinion and positions.</p>

<p>The “imagined geographies” of Edward Said, the language and the cultural
expressions used to describe people and places that are ‘other’, have
heretofore defined geopolitical relations. The popular conceptions of what
other places are like, are in essence largely imagined. However untruthful
these representations may be, they do exemplify deeply embedded coded
attitudes about these spaces. It is thus informative to try to understand what
the imagined geographies of various geopolitical actors are and to attempt to
unpack them into the ingrained conceptualizations that a particular culture
has about another. Perhaps in the study of interconnected social networks it
is now possible more than ever before for cultures to be able to see
themselves in the imagined geographies of others. The power and effects of
these media can be captured in several recent events.</p>

<p><strong>Iran: dissemination and organization</strong><br/>
When the results were announced after the June 12th Presidential Elections in
Iran as a landslide win for the incumbent Ahmadinejad, there were widespread
protests of election fraud. Iran, with its largely youthful population (almost
seventy-five percent of the population is under 30 (Hamedani, N. 2009)) is
also quite well connected in terms of new media. With 600,000 Facebook users,
more than 400,000 regularly updated blog sites and other Persian-language
social networks, SMS text messaging, one third of the population with access
to internet and two-thirds on mobile phones (Sohrabi-Haghighat, M., Mansouri,
S. 2010), Iranians were able to quickly start a groundswell civic movement in
response to the election results. On June 17th, largely through the use of
Twitter to get the word out, supporters of Mousavi rallied in Tehran. Prior to
this, the Iranian government was already disallowing unfettered access to the
internet, blocking many sites allegedly for pornographic content but also for
political content as well. However in the wake of this unprecedented use of
social media for oppositional organization they took swift action in an
attempt to prevent further use: foreign journalists were forbidden from
reporting and satellite communications were jammed, SMS texting on the mobile
network was disrupted and the internet was throttled to a bare minimum (ibid).
However these efforts were not effective enough and were not quick enough. The
protesters were still able to upload videos of the brutal police repression
and the riots in the streets from their mobile phones and indirectly to
YouTube. At the height of the protests Iran related Twitter tweets came in at
a rate of 15,000 per hour (ibid).</p>

<p>In the foreign media these videos and posts were shown over and over &#8211; in
particular a harrowing mobile phone video of a young woman, Neda Agha-Soltan,
dieing from gunfire on the street. However, the official Iranian government
news attempted to downplay the size of the protests and showed the protesters
to be disruptors of the peace. In the west the main news outlets were eager to
show the grainy and raw seeming video. Without their own journalists on the
ground, they simply broadcast the citizen media. Both because of the sheer
amount of material and the rapidity of events, material was reported without
confirmation. The citizen media had practically taken over foreign news
outlets as well.</p>

<p>This is a remarkable example of the power of decentralized social networks
allowing for the collaboration of protests and, in this instance, the birth of
the “Green Movement” in Iran (Diamond, L. 2010). Demonstrating the larger
geopolitical entanglements between the U.S. and Iran, the U.S. State
Department requested that Twitter postpone a scheduled downtime so as to not
hinder any protest communication (Drezner, D. 2010). Not only was the movement
able to form despite the censure and repression of the Iranian government, but
it was able to continue planning and executing protests for months after the
initial protests, albeit in later stages to mourn for those killed in the
repression rather than to continue the ultimately failed election protests.
Additionally because of the blackout on foreign reporting, internationally the
citizens media was practically the only media, this was an unprecedented event
and, since then, has contributed to many news outlets aggregating citizen
media into their daily news cycles (Zuckerman, E. 2010).</p>

<p>This is only one recent example of the use of new media for dissemination and
organization. In neighboring Iraq new media has been put to a very different
use.</p>

<p><strong>Iraq: cracking imagined geographies</strong><br/>
The U.S. Iraq war of 1990-1991 is barely remembered by the younger generations
of Americans. Any dissent that did exist to Desert Shield and Desert Storm is
all but forgotten and buried beneath images of a successful and high-tech
military success. The internet in those days was fledgling and largely
inaccessible to anyone but researchers and military. The majority of Americans
only had traditional mainstream media access through TV or print media.
According to one reporter on the ground in Iraq at the time, the mainstream
media in the U.S. was self-censoring &#8211; only showing anesthetized images and
shielding the public from some of the more horrific aspects of Desert Storm
(Gregory, D. 2004).</p>

<p>The mainstream media for a large part of the Second Gulf War (2003-) has also
been largely pro-American biased and propagating the imagined geography of the
U.S. government. However, now there are more options. Foreign media, including
Al-Jazeera with it’s very different perspective, is readily accessible online.
Additionally, as seen in the case of the Iranian “Twitter Revolution”, citizen
media can be a powerful alternative news source. In the early days of the
Second Gulf War a Pew poll showed that fifty-six percent of internet users in
the U.S. were going to online sources for their information about the war
(Madanmohan Rao 2003). With this war came the major advent of “warblogs.” “The
Iraq War represents a significant online-news milestone. We now have the
content and the infrastructure in place for serious purveyors of Internet news
to call themselves mainstream media [&#8230;] it truly is a defining moment”
(ibid, pg. 6).</p>

<p>Warblogs such as Salam Pax, Riverbend, and Juan Cole’s Informed Comment have
attracted millions of readers and eventually resulted in published books and
have been highly regarded and referenced by mainstream media (Drezner, D., &amp;
Farrell, H. 2004). Salam Pax (the Baghdad Blogger) and Riverbend both provided
personal narratives of the war in Iraq from a completely different perspective
than the embedded journalistic establishment. Part of what makes blogs so
effective is that</p>

<blockquote><p>“for readers worldwide, blogs can act as the “man on the street,” supplying
unfiltered eyewitness accounts from foreign countries [&#8230;] For salient topics
in global affairs, the blogosphere functions as a rare combination of
distributed expertise, real-time collective response to breaking news, and
public- opinion barometer.” (ibid, pg. 3)</p></blockquote>

<p>What is so different about the Iraqi case from the Iranian bloggers is that
there is no active state suppression of these blogs. Bloggers in Iraq are,
however, limited by the availability and stability of the internet connections
and electrical supply. These are not small hurdles and in many cases can be as
effective at preventing the non-privileged from being heard as active state
censorship.</p>

<p>Blogs allow geopolitical jumping of scale: “the scaling up of social struggles
from local to regional, national, or international” (Glassman, J. 2001). By
allowing voices that would typically go unheard to be heard, blogs allow local
issues to interact with transnational actors which eventually in some cases
can result in political action. They “ allow many online activists to make
direct appeals to the global public sphere, bypassing editorial gatekeepers in
traditional media outlets” (Drezner, D. 2010). For those outside of Iraq, the
ability to see a view from the inside provided by such bloggers as Salam Pax,
unfiltered by the imagined geographies of their own press corps, is essential
to having a more accurate and a more critical geopolitical understanding of
the war. These horizontal lines of communication enable transnational civil
societies which can in turn effect geopolitical outcomes.</p>

<p><strong>Others and Caveats</strong><br/>
There are many cases of new media being effective in bringing about action.
Whether it is the ultimate release of the imprisoned Iranian blogger Sina
Motallebi through the “boomerang effect” (Drezner, D., &amp; Farrell, H. 2004), or
the planning, execution and Indymedia reporting of the Battle of Seattle
(Juris, J. 2005), or the coordination of the “Orange Revolution” in the
Ukraine in 2004 (Drezner, D, &amp; Farrell, H. 2004), or the Zapatistas in Mexico
jumping scale and eliciting international funding for their cause (Juris, J.
2005), or the organization of the Philippine EDSA Revolution in 2001 leading
to the overthrow of then President Joseph Estrada, all these cases are enabled
by social media.</p>

<p>There are also cases where the new media networks have helped the spread of
information and “alternate” viewpoints and have influenced civil societies.
These include the Iraqi bloggers attempts at changing public opinion in the
western world and the spread of information about the Saffron Revolution in
Burma in 2007 (Diamond, L. 2010) with the effect of bringing international
attention, sanctions and international protest movements organized through
Facebook. It may appear that social media is a power for “good” and that the
further spread of these technologies will only benefit global society. However
there are many caveats that are often overlooked. To date these technologies
are still largely dominated by the developed world. Access remains a challenge
in many parts of the globe. As with any technology, infrastructure needs to be
built. What differentiates the internet from older media technologies is that
it is decentralized and infrastructure can be built up in a somewhat piecemeal
fashion. Censorship in repressive regimes is a bigger concern. China has one
of the most well developed internet censorship infrastructures:</p>

<blockquote><p>Fifty-thousand Internet police prowl cyberspace removing “harmful
content”—usually within 24 to 48 hours. Students are recruited to spy on their
fellows. And the regime pays a quarter of a million online hacks (called
“50-centers” because of the low piece rate they get) to post favorable
comments about the party- state and report negative comments. (Diamond, L.
2010, pg. 74)</p></blockquote>

<p>This is in addition to limiting access, imposing regulations requiring the use
of real names in blogs, and going so far as to, during times of crisis, simply
shut off all access completely. In countries where internet access is mostly
government controlled (such as in North Korea) this can certainly hinder
coordination attempts during times of political upheaval. For instance, the
Chinese government blocked local internet access during the 2008 Tibet
protests (ibid). Access even to such a decentralized resource as the internet
is uneven across the globe, however under any repression there will be
attempts to circumvent access controls and censorship. In Iran, for instance,
people used Tor, an open network relay to allow anonymous access to blog sites
through a number of relay points.</p>

<p>Governments are also using social media for their own purposes and for the
purposes of repressing the very freedoms of expression that social media is
allowing in their citizens. In Iran the government used the same social
networks to identify and arrest Green Revolution leaders. In Belarus in 2007
“smart mob” protests were thwarted by government monitoring of LiveJournal
blog sites. As one Belarusian commentator wrote, “Social media created a
digital panopticon that thwarted the revolution; [it was] infiltrated and
hopelessly outgunned by the power of the state&#8230;The emergence of new digital
spaces for dissent also lead to new ways of tracking it” (Drezner, D. 2010, pg
36). This of course works both ways in a virtual media race.</p>

<p>However, new media use is not limited to governments and “good” civil
societies. Other non-state actors, such as terrorist organizations, can use
these same technologies just as effectively. Cell phones were used during the
9/11 terrorist attacks on the World Trade Center in the final stages of
coordination, but other technologies are also employed for the purposes of
terror. Mexican drug cartels post YouTube videos of killings as warnings
(ibid). Hacktivism is closely related to cyber-terrorism and can be used by
governments and non-humanitarian groups just as easily. In the Mumbai attacks
of 2008 mobile phones, Google Earth and various other technologies were used
to plan and coordinate the attacks (Kaplan, C. 2009)</p>

<p><strong>Thoughts</strong><br/>
As we can see, the interconnected and decentralized new media networks are
powerful tools. There have been studies done of the effects of decentralized
social networks in terms of geopolitics and global civil society, however not
as much work has been done on the analysis of the content of the citizen media
for the purposes of breaking through imagined geographies. As of 2010,
BlogPulse reports that there are more than 144 million blog sites. Because the
the interconnected nature of blogs (bloggers will often link to posts in other
blogs) a hierarchy of blogs develops, with a trickle up effect of opinion from
smaller blogs up toward bigger blogs with more readership (Drezner, D, &amp;
Farrell, H. 2004). The blog hierarchy aggregates public opinion (at least the
opinion of the online public) and presents it to the rest of the world. The
opinions may be biased, one-sided and ignorant, however, they are reflecting
of a side of societies that before now has gone unheard or has been repressed.
Individual issues have been analysed with the help of online media, such as a
study of nationalism in Zambia reflected in an online community (Fergusun, J.
2003). However there do not appear to be any broad spectrum analyses of online
public thoughts.</p>

<p>Mainstream media in the U.S. is starting to incorporate “Elite” blogs, Tweets,
and some rudimentary opinion representation from social networks, however this
is an unscientific endeavour and is tainted with selection bias. Aggregator
sites allow people to submit links to articles and posts and to vote on them
(Zuckerman, E. 2010). These sites have become quite popular and allow an
easier navigation of the otherwise unnavigable chaos of online opinion.</p>

<p>What does not exist however is a visualization tool providing a global
geopolitical opinion survey. There are some attempts at building tag clouds
from the top topics being discussed, but usually these are limited to English
language blogs only and do not provide an interesting metric. However a tool
that allowed a geographic analysis of local voices has the potential of
opening this world to a much broader audience. If it were possible to analyze
the blogs and comments and social media of various areas, grouping them
together and then geolocating them onto a map allowing for the browsing of
issues and opinion. Additionally the ability to search for specific targets of
opinion would be essential. For instance, searching for America would show the
opinions related in the blogs from various geographic areas. This sort of
visualization could be a useful tool in combating the imagined geographies
that have continued to define and drive conflict throughout the world.</p>

<hr />

<p>References</p>

<p>Agnew, J. (1994). The territorial trap: The
geographical assumptions of international relations theory. Review of
International Political Economy, 1(1), 53-80. doi:10.1080/09692299408434268
Brunn, S. D., Cottle C. D. (1997).</p>

<p>Small States and Cyberboosterism.
Geographical Review, 87(2), 240-258. doi:10.1111/j.1931-0846.1997.tb00073.x
Diamond, L. (2010). Liberation technology. Journal of Democracy 21(3), 69-83.
Retrieved July 20, 2010, from Project MUSE database. Dodds, K. (2007).</p>

<p>Geopolitics: A very short introduction. Oxford: Oxford University Press.
Drezner, D.W. (05/01/2010).</p>

<p>&#8220;Weighing the Scales: The Internet&#8217;s Effect On
State-Society Relations.&#8221;. The Brown journal of world affairs(1080-0786), 16
(2), p. 31. Drezner, D., &amp; Farrell, H. (2004).</p>

<p>Web of Influence. Foreign
Policy, (145), 32-40. Retrieved from MasterFILE Select database. Glassman, J.
(2002).</p>

<p>&#8220;From Seattle (and Ubon) to Bangkok: the scales of resistance to
corporate globalization&#8221;. Environment and planning. D, Society &amp; space
(0263-7758), 20 (5), p. 513. Hamedani, N. (2009).</p>

<p>&#8220;The World Is Watching&#8221;&#8230;a
Blurry Picture in Iran. The Washington Report on Middle East Affairs, 28(6),
11-13,16. Retrieved August 12, 2010, from Research Library. (Document ID:
1875867041). Häkli, J. (2001).</p>

<p>In the territory of knowledge: state-centred
discourses and the construction of society. Progress in Human Geography,
25(3), 403-422. Retrieved August 12, 2010, from Research Library. (Document
ID: 1082224611). Juris, J. S. (2005).</p>

<p>The new digital media and activist
networking within anti-corporate globalization movements. Annals of the
American Academy of Political and Social Science, 597(, Cultural Production in
a Digital Age), 189-208. Retrieved from http://www.jstor.org/stable/25046069
Kaplan, C. (2009-12).</p>

<p>&#8220;The Biopolitics of Technoculture in the Mumbai
Attacks&#8221;. Theory, culture &amp; society (0263-2764), 26 (7-8), p. 301. Lithgow,
M.. (2007, October). The cultures of citizenship: Exploring the ties between
media literacy, blogging and democracy. Our Schools, Our Selves, 17(1),
177-189. Retrieved August 13, 2010, from CBCA Complete. (Document ID:
1385429291). Madanmohan Rao. (2003, January).</p>

<p>New Media: Countering US
Mainstream Media Views in Iraq War I and Iraq War II. Media Asia, 30(3),
133-137. Retrieved August 13, 2010, from ProQuest Asian Business and
Reference. (Document ID: 548340201). Sohrabi-Haghighat, M., Mansouri, S.
(2010).</p>

<p>&#8216;WHERE IS MY VOTE?&#8217; ICT Politics in the Aftermath of Iran&#8217;s
Presidential Election. International Journal of Emerging Technologies and
Society, 8(1), 24-41. Retrieved August 12, 2010, from ABI/INFORM Global.
(Document ID: 2082649231). Zuckerman, E.. (2010).</p>

<p>International reporting in
the age of participatory media. Daedalus, 139(2), 66-75,154. Retrieved August
12, 2010, from Research Library. (Document ID: 2024538961).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ENGS31 DigitalElectronics -- TiNZ]]></title>
    <link href="http://timofei7.github.com/blog/2009/09/01/tinz/"/>
    <updated>2009-09-01T01:39:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2009/09/01/tinz</id>
    <content type="html"><![CDATA[<iframe id="tinz" width="853" height="480" src="http://www.youtube.com/embed/jcJoUI1PBZo?rel=0&amp;hd=1" frameborder="0" allowfullscreen></iframe>


<p>(Divya Gunasekaran and Tim Tregubov, Summer 2009)</p>

<p>Our goal for this project was to create a simple, but addicting game that played off of old-fashioned handheld and vintage arcade games, but utilized newer technology that allowed for a more modern feel and the implementation of more exciting features. We succeeded in creating a challenging game that takes the user&#8217;s movements as inputs via an accelerometer to move the player on the board, which consists of a small 8x8 RGB LED matrix with a seven-segment display showing the timer and score. A piezo is also included to produce different sounds for specific actions in the game. These components contribute to a gaming experience that is stimulating both tactilely, visually and aurally. The game design also makes the game easy to reprogram to include more levels and additional features.</p>

<!--more-->


<h2>Details</h2>

<p>This was perhaps the most fulfilling class I have ever taken.  In groups of two we designed and built an electronics project from scratch.  We reinvented the original tilt-maze game as a digital moving maze on an RBG 8x8 LED matrix controlled via accelerometer.  Our maze designs included a multicolor fire-spewing dragon, a volcano, and an alien space ship with lasers.</p>

<p>People enjoyed playing the game and we were asked to come back to demo it at various Engineering School events.</p>

<p>The experience of building a working, playable, and enjoyable electronic toy was very empowering.</p>

<p>The basic details of the project and what I learned:</p>

<ul>
<li>Digital circuits and logic</li>
<li>VHDL FPGA programming</li>
<li>Project design</li>
<li>Accelerometer programming</li>
<li>LED multi-segment RGB display programming</li>
<li>Piezo programming</li>
</ul>


<p>Here is the full <a href="https://s3.amazonaws.com/timofei7portfolio/TiNZ/engs31FinalReport.pdf">project report</a> with schematics and software design.<br/>
(note: section 7 with complete code is omitted, but I may post it if people are interested)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Greenlite Dartmouth]]></title>
    <link href="http://timofei7.github.com/blog/2009/07/20/greenlite-dartmouth/"/>
    <updated>2009-07-20T22:10:00-04:00</updated>
    <id>http://timofei7.github.com/blog/2009/07/20/greenlite-dartmouth</id>
    <content type="html"><![CDATA[<iframe id="greenlite" width="640" height="480" src="http://www.youtube.com/embed/RGeYHYpLQa8?rel=0" frameborder="0" allowfullscreen></iframe>


<p>The Greenlite Project: An animated polar bear which aims to educate students about the impact of electricity and other resource use.</p>

<p>This was a Siggraph 2009 information aesthetics video submission we made. Although we didn&#8217;t get into the information aesthetics category we did end up with a Siggraph Poster and were invited to a Panel. This video provides a good summary of what the project was about.</p>

<!--more-->


<h1>Greenlite Dartmouth (aka TellEmotion)</h1>

<p>Together with one of my favorite professors and two other students we founded a startup called TellEmotion (from Tim/Evan/Lorie/Luke).  The idea was to present electrical usage in an intuitive emotionally appealing way.  We designed and implemented a system for reading electrical meters on campus which would then feed into an animation of a polar bear.   The state of the bear would change based on the how efficiently the resources were being used.  If electrical usage was up (either compared to historical data or to some target goals) then the bear would be unhappy and its environment would be melting, if electrical usage was down, then it would play and be happy.  This was based on some research that showed that behavior change is sometimes better driven by emotional rewards rather than strictly financial considerations.  The system was a success and is now installed in many dorms and buildings on the campus as well as in other schools nationwide.   Although the most benefit comes from the educational aspect of the system, it has been shown to decrease energy usage over time.</p>

<h2>Semi-Publications</h2>

<p>Here is a paper we submitted to Siggraph (not accepted): <a href="https://s3.amazonaws.com/timofei7portfolio/greenlite/siggraph_paper.pdf">Greenlite Dartmouth</a></p>

<p>Here is our Poster (was accepted): <a href="https://s3.amazonaws.com/timofei7portfolio/greenlite/GreenLitePosterSiggraph.pdf">Greenlite Poster</a></p>

<h2>Original Flash Version</h2>

<p>My contributions ranged from system design and implementation to administration.  I worked on a number of pieces, including the communication with the electrical meters, brainstorming design and system architecture, poller (Java), server configuration and fronted display configuration and setup.  Additionally in the video you can see some parts of a 3D environment that I designed (with help from Craig Slagel and others), as well as a brief glance at a 3D Dartmouth campus for which I wrote the Unity3d code to do a navigation map.</p>

<p><strong>Brief Technical Details:</strong> The fronted was flash and GWT with the Java backed and mysql database fed with minute by minute electrical data by a Java poller. More details in the <a href="https://s3.amazonaws.com/timofei7portfolio/greenlite/siggraph_paper.pdf">paper</a>.</p>

<h2>3D Version</h2>

<p>Toward the end of my time with the project I worked on a more game-like realtime interactive 3D variant in which everything responds to the energy use. This was designed as a web demo so the energy use is controllable by clicking on the light bulbs. Other parts of the environment also react to various things, the bear can look at the monitoring station (update: the image source for the realtime graph is no longer available), and pretty much everything in the world responds one way or another to the energy use.</p>

<p><strong>Brief Technical Details:</strong>
I implemented this in Unity3D in C# using models I created in Maya. All the polar bear animation is motion capture of… me…  The system does have the capability to connect to the metering backend and get realtime energy data (same as the 2D version), however for the web demo that is turned off.</p>

<p><strong>Try it out, click around!   <a href="http://timofei7.github.com/pages/pBear.html">Polar Bear 3D demo</a></strong></p>

<h2>Lessons Learned</h2>

<p>I learned a lot on this project, from electrical metering to architecting a larger scale software project to working with motioncapture and a 3D game engine.  Another important lesson was that 3D is not necessarily better. Although people responded positively to the 3D animations (more so the quadruped version in the video than the biped in the web demo), the 3D version would have required many more man hours and at that stage in the project was simply too work intensive.</p>

<p>You can see it all live at Dartmouth right now here: <a href="http://greenlite.dartmouth.edu">Greenlite Dartmouth</a></p>
]]></content>
  </entry>
  
</feed>
